nikon	sigma	lenses, the same can be said about early Nikon lenses. But over the last twenty years or so, the quality of Sigma lenses has greatly improved, to the point where their best lenses are the equal to the best Nikon lenses for the most part, with very few exceptions. And even in those few cases, Sigma beats Nikon prices by an often considerable margin. Both Sigma and Nikon manufacture and sell more than one “level of quality” lens line. Until recently, Sigma sold both a standard line of lenses as well as a higher quality and slightly more expensive group of lenses called “EX”. They recently changed from the EX designation for their top-of-the-line lenses to the “ART” and “SPORTS” designations. As far as customer service goes, in my own experience Sigma and Nikon both offer excellent repair service, with Sigma having a slight edge since they are a smaller company and can therefore offer a more personal experience. In some functions on some lenses, Nikon has a slight edge over Sigma, but you pay much more for those Nikon extras, and they offer only minor improvements, which most users won’t need. One good way to identify good lenses is to see how many of them are used by professionals. Not long ago it was rare to find Sigma lenses being used by professional photographers at major sporting events, but now Sigmas are very common at such events. If pro shooters whose income rides on producing great photos are using Sigma lenses, that says a lot about their quality.	A lens is basically pieces of special glass, (elements) or in lesser lenses, plastic. The cost of the optical glass blanks used to make the very best lenses in the world, such as Leitz or Zeiss,  is very high. The cost of the glass that goes into a lens that is priced at 1/3 the cost, just won't be as good. In other words, not all lenses that are similar in most other qualities are built out of equal components. There is also the precision of grinding the lens, which requires skills of the highest order, although, to tell the truth, that difference has narrowed between high price lenses and medium priced lenses, in the last few years, because of omputer and other technologies. Nikkor and Canon lenses, as with the less expensive lenses, vary according to quality with different, sometimes bewildering, names and letters designating one class over another. They aren't, however, usually the very best in the world, with notable exceptions, and they aren't priced as high as the finest lenses either. ($5,500 for a Leitz lens is not uncommon.) That conceded, both Canon and Nikkor make some excellent lenses. Off-brand or third party companies such as Tokina, Tamron, or Sigma also make some good lenses, but fewer, usually not at the highest level,  not always that much less expensive - but, on average, bargains.  Even if some of their lenses are not so good, even for the money, usually the image quality of pictures taken with most of these lenses is passable and perhaps better than passable. The tendency, however, is that you get what you pay for, but to obtain that final15% of lens performance, you may often have to more than double your cost. But there's a lot more to this subject.  A 35mm lens, for example, that is to be compared to another 35mm lens needs to have similar specs. Among other things. they should be similar in speed.  How fast a lens is, or its speed, measures how well it works in low light conditions. How good is it a gathering light, not just at focussing light. Two lenses that work about the same in sunlight may be very different just after the sun goes down. Whatever brand you buy an F 1.4 35mm lens will be considerably more expensive than a 2.8 lens, even if the slower lens is better in average lighting conditions, which does happen. Then, there are lens coatings, with some of the better lenses employing rare earths and nano crystals. That can effect the quality of shadow detail color aberration, or flare. All those many considerations are the result of lens design, the dedication towards perfection, and the cost of the materials. Finally, two lenses that are equal performers in most ways could be very unequal in build quality and resistance to, say, heat or moisture. Sometimes the difference between prosumer lenses and professional lens, or camera bodies, may come down to only that. With third party lenses build quality is often why they are less expensive rather than just their features and specs. In fact, build quality aside, image quality is often fine, and very occasionally even superior to main brands, to the big guns like Nikon or Canon. You need to do your research. You will need to learn what is being measured between lenses, such as types of distortion, vignetting, sharpness across the field, meaning on the edges of the image compared to the middle. Some of these measurement differences are far from critical, others can make a huge differences, and that is partly based on what you are taking pictures of and in what conditions.	I own and use around twenty Sigma lenses, and almost as many Nikon (Nikkor) lenses, all on Nikon cameras. I consider the two brands to be about equal in quality, sharpness and reliability.While some people experienced some quality control issues with a few early Sigma lenses, the same can be said about early Nikon lenses. But over the last twenty years or so, the quality of Sigma lenses has greatly improved, to the point where their best lenses are the equal to the best Nikon lenses for the most part, with very few exceptions. And even in those few cases, Sigma beats Nikon prices by an often considerable margin.Both Sigma and Nikon manufacture and sell more than one “level of quality” lens line. Until recently, Sigma sold both a standard line of lenses as well as a higher quality and slightly more expensive group of lenses called “EX”. They recently changed from the EX designation for their top-of-the-line lenses to the “ART” and “SPORTS” designations.As far as customer service goes, in my own experience Sigma and Nikon both offer excellent repair service, with Sigma having a slight edge since they are a smaller company and can therefore offer a more personal experience.In some functions on some lenses, Nikon has a slight edge over Sigma, but you pay much more for those Nikon extras, and they offer only minor improvements, which most users won’t need. One good way to identify good lenses is to see how many of them are used by professionals. Not long ago it was rare to find Sigma lenses being used by professional photographers at major sporting events, but now Sigmas are very common at such events. If pro shooters whose income rides on producing great photos are using Sigma lenses, that says a lot about their quality.	A lens is basically pieces of special glass, (elements) or in lesser lenses, plastic. The cost of the optical glass blanks used to make the very best lenses in the world, such as Leitz or Zeiss,  is very high. The cost of the glass that goes into a lens that is priced at 1/3 the cost, just won't be as good. In other words, not all lenses that are similar in most other qualities are built out of equal components. There is also the precision of grinding the lens, which requires skills of the highest order, although, to tell the truth, that difference has narrowed between high price lenses and medium priced lenses, in the last few years, because of omputer and other technologies.Nikkor and Canon lenses, as with the less expensive lenses, vary according to quality with different, sometimes bewildering, names and letters designating one class over another. They aren't, however, usually the very best in the world, with notable exceptions, and they aren't priced as high as the finest lenses either. ($5,500 for a Leitz lens is not uncommon.) That conceded, both Canon and Nikkor make some excellent lenses.Off-brand or third party companies such as Tokina, Tamron, or Sigma also make some good lenses, but fewer, usually not at the highest level,  not always that much less expensive - but, on average, bargains.  Even if some of their lenses are not so good, even for the money, usually the image quality of pictures taken with most of these lenses is passable and perhaps better than passable. The tendency, however, is that you get what you pay for, but to obtain that final15% of lens performance, you may often have to more than double your cost.But there's a lot more to this subject.  A 35mm lens, for example, that is to be compared to another 35mm lens needs to have similar specs. Among other things. they should be similar in speed.  How fast a lens is, or its speed, measures how well it works in low light conditions. How good is it a gathering light, not just at focussing light. Two lenses that work about the same in sunlight may be very different just after the sun goes down. Whatever brand you buy an F 1.4 35mm lens will be considerably more expensive than a 2.8 lens, even if the slower lens is better in average lighting conditions, which does happen.Then, there are lens coatings, with some of the better lenses employing rare earths and nano crystals. That can effect the quality of shadow detail color aberration, or flare. All those many considerations are the result of lens design, the dedication towards perfection, and the cost of the materials.Finally, two lenses that are equal performers in most ways could be very unequal in build quality and resistance to, say, heat or moisture. Sometimes the difference between prosumer lenses and professional lens, or camera bodies, may come down to only that. With third party lenses build quality is often why they are less expensive rather than just their features and specs. In fact, build quality aside, image quality is often fine, and very occasionally even superior to main brands, to the big guns like Nikon or Canon. You need to do your research. You will need to learn what is being measured between lenses, such as types of distortion, vignetting, sharpness across the field, meaning on the edges of the image compared to the middle. Some of these measurement differences are far from critical, others can make a huge differences, and that is partly based on what you are taking pictures of and in what conditions.	If you want an objective third party test of image quality differences from various lenses for your camera go to DxO Mark (http://www.dxomark.com/index.php...).The web page above compares the Sigma and Nikon 70-200mm f/2.8 lenses to one another.  Here's a thumbnail of the results:The Nikon scores higher overallThe Nikon has greater resolution 58 lp/mm versus 47 lp/mm in the SigmaThe Nikon has less distortionThe Sigma has less vignetteThe Nikon is heavierI recommend DxO Mark for an quantifiable review of image sensors and lenses.  I know of no other extensive source for information this good.
honda	toyota	I’ve been driving a honda city AT for almost 7 years and have never faced any challenge whatsoever with the car. The only major expenses include Two sets of tyres, Insurance And fuel. The car has done over 110k and still drives like a dream. Toyota on the other hand being twice as expensive feels like a premium car and is rock solid trouble free, worry free car. The biggest expense here was insurance. This one has done 25k and feels like We bought it yesterday. In terms of comfort Toyota is far superior than any car in the industry be it the driver or the passengers there is no match for Innova. Honda city on the other hand is superb in driving. It’s steering is so light that anyone can drive it with ease. There is no engine sound at idling. Super smooth ride and you reach in comfort to your destination. Long drives for the passengers is not as good as Innova though.	Once Toyota was built way stronger then Honda. Today they are more or less the same when it regards conventional cars. However they use quite different hybrid approaches. Hybrides of Toyota more sophisticated, fuel efficient, though also more fragile and expensive. The technology build the way, where computer always switches moment on wheels between electric and conventional motor, depends on driving mode. It may drive on pure electric mode, when slow. They worth most, when drive primarily across the city. Honda uses so called “mild hybrid”, where electricity only helps conventional motor to accelerate faster. Respectively their engines less fuel efficient, thought built simpler, cheaper and more reliable. Even when batteries will be exhausted, the car still will be roadworthy, thought less efficient and less powerful.	In terms of statistics, Honda are just on-top of Toyota - but both are in respectable positions within reliability tables. In terms of repair costs, they are pretty much the same. I have heard off a few people that certain Toyota models have been rushed off the production line, which leads to some build issues - I've got no evidence for this, though. I have never owned a Toyota, but the amount of them that appear on the roads is a testament to their popularity & reliability. Honda, however, I can sing first-hand praises for. My brother has owned Civics for the past four-or-so years, and both of his have been so reliable that even our dad, who is a devoted German car fan, has conceded and admitted that the Civics are more reliable than most cars he's driven. I started driving a Civic last October, and I've had a bad one: so far, I've had to have a new clutch and flywheel (premature wear - 75,000 miles on a diesel); new shock absorbers that are in need of replacement again; a turbo that won't stop whistling & a clogged EGR valve; and, just in time for the winter, a blower motor that has packed-up. All in, I've probably equalled the car's value in cost of repairs. However, I would buy another Civic in a heartbeat, if I could afford to. I am completely sold on their reliability; I've just had a bad one. As for a choice between the two: for me, I would choose Honda, as they are incredible to drive & there is a vast array of cars available. However, someone might be just as passionate about Toyota - and fair play to them for being so!	Hondas are a bit more engaging to drive, Toyotas tend to be isolated. Toyotas have more available features, Hondas are simpler. Toyota also has more available models. If you want a large SUV, a solid work truck, big towing capacity or serious off road capability, Honda doesn't have anything for you.	
java	scala	For Android, Java is the best option as far as general development is concerned. All the APIs are in Java and it is the default language for Android development. As far as Scala is concerned there might be a way to use it for Development but it not standard. Same goes for iOS	Java 8 will have lambda support, but Scala have much more great things such as: pattern matching, multiple inheritance through Traits, macros, string interpolation and more. Scala is growing much faster. I don't see any reason to continue working with Java	It comes down to your hiring needs: quality vs. quantity. If you're going to be hiring 1 really good programmer per month, or at a lower frequency than that, then use Scala. Good programmers can do a lot more with Scala than with Java. If you're going to be hiring 10 developers per week for the next 6 months, and you don't care about how good they are (some work doesn't need a top developer) then you should probably use Java.	IMHO Scala over Java because surface area is lower (you code less, see more and solve bugs easier) also there are more fictional paradigms.	
eclipse	netbeans	Probably the biggest difference that will affect you, between Eclipse and NetBeans, is the way they manage projects.  Eclipse invented their own concept of what a “project” is, and build tools such as Make, Ant, Maven, Gradle, etc. have to be shoehorned into that.  This is what makes using something like Maven in Eclipse painful. With NetBeans, we made a very conscious decision to use existing build tools’ metadata as NetBeans projects.  So if a folder has a build file in it, it simply is a project. If you’re just learning programming, that won’t affect you much.  But if you’re working professionally, on existing projects and other people’s code, it makes a huge difference, for several reasons: You know that what you build in your IDE is exactly the same thing you’d build on the command-line or for a production release (modulo “compile on save” which some project types support).  You get a lot fewer “but it works for me” kind of situations There’s no “configure your system to develop X” phase, which wastes a lot of teams' time - you just open the project and go. So, when it comes to doing professional software development, NetBeans is likely to give you fewer headaches.	All major IDEs are pretty good and you can use any of them. But when things are very similar in their feature set, small things matter, and since as a developer you'll spend a lot of time with your IDE, they matter more. I personally prefer NetBeans, here's why: I'm working as a consultant in many different companies. Many of them use Eclipse. And every project has their own Eclipse. A specific version setup with a couple of plugins, and everyone has to use that. So I end up with one Eclipse installation per project. That's simply annoying. It's probably not such a big problem, if you're working on the same project for 2 years. Most projects I'm working with use Maven, so often I can simply use NetBeans. The Maven support in NetBeans is definitely miles ahead of Eclipse. In Eclipse things like Annotation Processors don't work out of the box in Maven projects. So you need to find a plugin, learn how to configure it, and then make sure it's compatible with your other plugins. That's tedious and a waste of time, especially if you're in a project only for a week to help fix some problems. In Eclipse I also had problems with generated classes, as Eclipse has it's own compiler that sometimes clashes with javac when you also use Maven to build. Often the build runs without problems from the commandline, but doesn't when starting it from Eclipse. I'm sure this is a solvable problem, but I prefer to spend my time coding. Another problem is that Eclipse doesn't listen to the file system for changes which forces you to refresh very often. If you're in a project that uses Maven, NetBeans is the better choice, because it simply works. That said NetBeans has it's problems too, e.g. while a maven repo is indexed it slows down horribly, which is annoying. But alltogether the tools are much better integrated and it's designed to get out of your way. E.g. when I wrote a book on JavaFX I wanted to show how to create a project with all three major IDEs. With NetBeans it was a 3 step process, with Eclipse it took 8 steps.	Eclipse Pros: Huge amount of plugins. Big ecosystem. Eclipse Cons:Hard to start with due to the low out-of-box functionality. Most of the basic things need plugins to be installed and configured. So many changes between versions. It's really complex to figure out the right one to use. Interface is not user friendly. This might be due to me working on NetBeans since day one, but is the same feedback I get from fellow programmers. NetBeans Pros: Bigger out-of-box exprience. There are a few flavors of the IDE, those being a set of bundled plugins already bundled based on technology (C, Java SE, Java EE, PHP, etc.). Even if you pick the wrong one, you can get what you need by creating or opening a project. User friendly interface. Since is done by Oracle, it has support for newer Java versions earlier than any other IDE. This is important if you want to live in the bleeding edge of technology. After version 5.0, the platform is pretty stable and upgrading is seemless. Netbeans Cons: The amount of plug-ins or 3rd party plugins might be low. Eclipse seems to have bigger 3rd party support.		
apple	ibm	IBM was king of the big iron when computers were giant room filled contraptions. They jumped in the desktop thinking they could control this new market but was quickly bypassed as PC’s were commodities and MS was willing to sell them an OS. THey could not compete in the fast ever changing market. Apple has provided tech products for the end user, in the first years, the buying power of enterprise engulfed the industry but after 20 years, that has faded and now Apple is the only company that consistent delivers products that consumers want to buy.They have no real competition in any category - yes, they have competitors but most only sell about 15% in direct competition with Apple.	IBM has a long a good history in innovation and technology. Unfortunately ibm rested on its laurels and only became interested in shareholder value, not in customer value over time. Apple has done similar things. They push and push for their products without actually listening to customers like I would expect. Does that mean that Apple will have a near death experience like ibm? I would argue that apple’s near death experience in the early 1990s was in fact worse than what ibm went through. at the end of the day, Apple makes products that people want to buy and do based on their paying. Ibm has never fully recovered and seems to be going in a race to the bottom to be cheap.	by the time that Apple and Microsoft were founded IBM was the very embodiment of Eisenhower era enterprise-scale industry. The post-war world was busy manufacturing a newly minted middle class at scale from soldiers returning from World War II and the GI Bill to put them through school and in cookie cutter homes in suburbia. It was a weird period of cold war terror and paranoia and a optimisim that science and engineering could solve everything if you put enough people on the problem. It was that belief that Man had conquered and mastered nature and that nothing was impossible that made IBM what it was. I remember seeing pictures from an IBM campus from the 50’s or 60’s showing trees which had been cut into cubes. The message was clear. Conformity was king, the chaotic roaring twenties, the great depression and then the world war and the ever present threat of nuclear armageddon was never far from people’s minds. But remember as well that IBM was not only Big Iron. It was also the IBM Selectric Typewriter which was an astonishing accomplishment. Anyone who has had to do any substantial typing on cheap electric or mechanical typewriters and then moved to a Selectric can tell you that it was a life changing event. These were such amazing machines that even the most iconic publication to come out of the counterculture, Steward Brand’s Whole Earth Catalog was created on a Selectric. And I remember they included a glowing description of the machine and how amazing the service IBM provided was. What many people forget is that IBM had been fighting off new technology long before the PC came along. DEC (Digital Equipment) with the PDP and Vax lines of minicomputers and other company such as Wang from the Route 128 tech belt around Boston shrank computers that had required entire floors into a handful of machines the size of fridges and washing machines. With Big Iron a company had one monster computer. With mini computers single departments could run their own systems. The Unix operating system was developed on a DEC PDP. Not long after Sun Microsystems came along and shrunk these systems even smaller. The PC was developed in this larger context of the minicomputer revolution. Wang and Dec both produced stand alone word processers that looked like a PC but could only do world processing. These machines could run rings around the Selectric. So IBM was being hit from all different directions at the same time. What IBM, Xerox and the others didn’t understand was that as computers became smaller and cheaper, so would their profit margins. They couldn’t get their heads around the idea of a commodity computer. A computer to them was not something you just plugged in and used it required a huge amount of infrastructure to install and operate it. Microsoft was a trojan horse going, sneaking in on a floppy disk. Apple was actually much more like IBM than Microsoft, insisting on building both their own hardware and software, keeping it locked down and proprietary and their margins high. Microsoft was only different because they didn’t build their own hardware. Both companies grew up in a world where computing had moved from a centralized mainframe to a computer on every desk. Computing had moved to the edge of networks. So they never could become an IBM. It was a different world, a different market and technological model. The surprising thing is what has happened to IBM since then. IBM pivoted from a hardware company to a services company, fully embraced the Open Source model and has gone on to do some remarkable work. Apple is still stuck in the same model they used when they started. Microsoft waited too long to pivot and didn’t even start until after Gates and Balmer had left. I have my doubts that the tiger will be able to change it’s stripes. But in one sense, IBM didn’t so much change its stripes as much as keep the stripes and morph into a zebra. Since then, computing has become a cloud where no one sees the computers any longer and software is largely part of an open commons. Everything is now a service layer on top of that infrastructure as public utility. Microsoft is trying to become that as well and doing okay, but their time has passed. Over time they will not be able to leverage their dominance on the desktop to keep people using their rather bland barely functional products. And if they can’t keep customers locked into their ecosystem then eventually they too will just be another giant infrastructure company. Apple will be one of the last holdouts. They had been at the right place and time to become an major cloud player, but they couldn’t let go of their hardware being at the center of everything. And besides, Apple is more a consumer electronics company like Sony or Sumsung now. They have all but abandoned the idea of the PC as a general purpose computer.		
objective-c	swift	Swift brings a lot of advantages over Objective-C. Perhaps the most important to existing iOS/OS X developers is the new features it brings like better type safety, better memory management, multiple return values, and a bunch of functional paradigms. All these features mean that seasoned developers will not have to spend as long coding. Apple also boasts increased performance over Objective-C (and they even compared it to Python since it can act like a scripting language). Another great feature is its interoperability with existing Objective-C code. Looking through the Swift reference, it seems pretty trivial to mix and match old Objective-C code with Swift code, which will make the process of converting apps an easier, more iterative one. Swift is also great for people interesting in developing for iOS/OS X. Objective-C is a notoriously difficult language since its syntax is unlike that of any other major programming language. Swift's syntax is much more concise and friendly, taking some influence from languages like Python, Ruby, and Rust. It's hard to think of any huge downsides to using Swift rather than Objective-C. The only thing I can think of is that some developers might not be so keen on converting their apps since they've invested so much time into learning and using Objective-C and their codebases are likely big. Apple hasn't given a future date for when they plan to drop support for Objective-C (maybe they never will?). But the interoperability of Swift and Objective-C and fun of learning a new language make that somewhat hard to believe.	After reading tons of answers on similar questions I see a lot of speculations. Like Objective-C is harder to read and it is difficult language. Oh, really ?! Then I will say that .swift all-in-one files (header + implementation) is not easy to read and exclamation marks are awful =) I really don't think it is somehow helpful. Swift actually better in various things. Enums - it is hard to compare Objective-C enums that almost useless and Swift enums that have so many features. Or new guard and defer - it is just amazing. Swift gives you ability to write more expressive code and has all modern language features. Good old Objective-C is really poor in this things. But also Apple won't maintain two languages at the same platform. They can just say - no more Objective-C use it in only in special cases like wrapping C++ for Swift and that's all. They actually can (remember 64 bit support or IPv6). Anyway it is a speculation as well )	Pros: Swift is easier to read and write. It has less overhead and syntax requirements, and you can often achieve the same line of code using less characters. Swift can result in shorter overall code length. Swift is a functional programming language, which means you can do neat tricks like passing functions as variables. This means you can write highly generic code that can do a lot of different things, reducing repetition. Swift has some clever tricks up its sleeve, again due to having elements of a functional programming language. Things like 'map' and 'filter' for example. Swift is 'safer' - there's less memory management to worry about (basically none, compared to C). Cons: Most examples out there are written in Objective C (as of mid 2015). This isn't a big hindrance, but you should always at least learn to READ Objective C. At a minimum, translation isn't too hard. On a similar note, there aren't as many seasoned developers if you're hiring. Swift is a moving target. They've released 1.2 so far, and 2.0 is coming soon. Every small update brings adjustments to paradigms (such as how to do type casting) that can be a little frustrating to absorb. Objective C was also constantly updating, however, but not at the same rate these days. You have to use Xcode. For me this is totally fine, but others complain as they want to use third-party IDEs that have surpassed Xcode in stability and features		
java	perl	Perl is still a very useful language, and has a vibrant community releasing major and minor upgrades multiple times per year. There are more Perl programmers today than during the first dot-com boom. It’s just a smaller piece of a much bigger pie. The biggest problem Perl faces is that managers can’t find enough Perl people to hire. The kids all want the latest cool languages, believing Perl is past its prime. This unfortunately influences some managers to abandon Perl, because they can’t find anyone. Sad.	You know only Perl. The main difficulty will be the deeply Object Oriented nature of Java and typing of variables. The Perl data structures will map easily to Java ones though. Perl arrays could be either Java primitive arrays or instances of the ArrayList class (or maybe some other Collection). The control structures (loops, if/else) are largely the same and easily translated. You'll need to build the discipline of declaring your variable to be of a specific type. Overall this should be easier than (2). If you know any Java then this would be harder since the Perl code will, at first, will be hard for you to read. Going from a Java HashMap to a Perl hash, for example, is conceptually easy but syntactically difficult due to Perl's brevity and Java's verbosity. Again the main control structures are the same. I absolutely love Perl, but will acknowledge that for someone whose first language is Java that it might take a little bit to get your head around the syntax and different Perl idioms. Once you get into it for a bit I hope you'll take a step back and reflect on just how great a tool Perl is. If you are in (2) pick up a copy of Learning Perl and work through some exercises before even thinking about starting your script translation work! This is the hardest path to take, just in terms of effort required. On the upside you get to learn Perl. Yay!	Java is all about classes and methods and such.  Perl doesn't really require classes and the ones it does have are afterthoughts and not so wonderful.    The rest of Perl is a mish-mash of random and not too well thought out features.		
bash	python	I’ll stand firmly on the fence here, and say “both”. I use bash (or zsh) as my command shell, and python to run various system utilities and also for slightly heavier development. Each language has strengths and weaknesses; bash’s tight coupling to the filesystem and integrated piping, as well as support for running utilities etc make it more useful as a command shell. It’s also useful for wrapping external programs (making scripts to setup paths etc). That’s not to say python can’t do those things, but bash is better at it (IMO). Python is good for when you want to make a more complex script, or to use any of its many built-in utilities. A good sysadmin will be proficient at both (or bash and perl).	Bash is the shell. You won't be doing anything on Linux without it. The shell is the command interpreter., without it you cannot do anything including use python. It also provides the scripting language that is responsible for even booting the system. If you are talking about which one is more important, bash is because it is vital. Python has some modules that interface with Linux, But it does this through bash. Python is easier to use. But bash is far more powerful. You can use Linux without python, but not without bash.	Bash and Python aren’t even comparable. One is used for terminal scripts, whilst the latter is used for general programs and applications, both of which run well under Linux. It is impossible to answer this question!		
dell	hewlett-packard	If you are looking for posh look & good Built-in quality & your purchasing price range is about ₹ 55k to 60K than go for HP. If you are looking for average look & Normal build in quality & your price range is around ₹ 50K than go for DELL. HP laptops Advantages Best built-in quality. Stylish look. Damage protection. Disadvantages Higher price Cost. Bad Service provider. DELL Advantage: Good Configuration with little experience price. Good service provider. Disadvantage Normal Built-in quality. Average look.	1) Price: Both HP and Dell provides the best price laptops. Dell sell their laptops directly they avoid selling through retailers hence it's slightly cheaper than HP whereas HP uses both type of selling direct as well as through retailers hence its little bit costly than Dell. 2) Performance and Features: HP has better performance and features than Dell this might be due to it's entertainment-centric laptops with lots of features. Dell lack this features. 3) Options: Dell laptops offer more options to choose from for specific models, and HP has more models of computers with their own set of options to choose from.Dell often offers such specials as a free 120GB upgrade or extra RAM, and is good for those who are looking for more storage. 4) Build and Hardware: There is a noticeable difference between Dell and HP laptops. It is their appearance. Dell laptops seem to have a standard look while HP have a glossy appearance. Therefore many people think that HP has more attractive laptops than Dell. 5) Customer service and Warranty: Dell is known for it's excellent customer service and warranty. It also offers accident coverage so it's good for a traveler. 6) Verdict: So if you want to spend more to have good warranty option then i will suggest you to go for Dell Laptop.	Dell provides better service than HP. One thing I don’t like about HP is they do not provide is the whole information of their product on their website. Say for example, if the GPU variant is DDR3 or GDDR5, most of the time it won’t be mentioned. HP laptops tend to get some or the other damage.		
awk	sed	Both can accomplish the same task . Syntactically, the one which is better to use may differ depending on the expected task.You  have a huge file and a particular requirement like, Replace  specific characters or patterns in a file . get only the lines in the range containing a start pattern and end pattern and replace it with a new pattern, use a matched string in a line and replace only a part of it with another string or character, use sed. and if you need to, work with a file which has records separated by a delimiter or space and it is required to print/edit those records. Within a specific column, you need to loop through or check for a condition on a character or a string. Execute additional code blocks before traversing the entire file and after traversing the entire file ( BEGIN and END ), use awk.	sed is a stream editor. It works with streams of characters on a per-line basis. It has a primitive programming language that includes goto-style loops and simple conditionals (in addition to pattern matching and address matching). There are essentially only two "variables": pattern space and hold space. Readability of scripts can be difficult. Mathematical operations are extraordinarily awkward at best. There are various versions of sed with different levels of support for command line options and language features. awk is oriented toward delimited fields on a per-line basis. It has much more robust programming constructs including if/else, while, do/while and for (C-style and array iteration). There is complete support for variables and single-dimension associative arrays plus (IMO) kludgey multi-dimension arrays. Mathematical operations resemble those in C. It has printf and functions. The "K" in "AWK" stands for "Kernighan" as in "Kernighan and Ritchie" of the book "C Programming Language" fame (not to forget Aho and Weinberger). One could conceivably write a detector of academic plagiarism using awk.	sed command- sed is a stream editor. It provides the capability to modify, insert, delete, format the text data at command line itself. awk command- awk is programming language generally used for text processing and formatting. It provides the facility to specify pattern, command/actions on the command line or in a program file to process the text and generate the formatted report by manipulating the data available in datafile.		
cornell	harvard	I'm a Cornell graduate in physics.Reputation is a silly thing. Harvard, of course, has a solid gold reputation, especially outside of the United States. From a Singaporean perspective, you can sleep your way through Harvard and still be held in higher regard than anyone else studying virtually anywhere else. Cornell, on the other hand, is regarded as an easy Ivy League university: a good place, but averagely so. But I ended up working harder than I had ever worked before academically, and this coming from someone who lived through 12 years of the education pressure cooker that is the Singapore system.The truth is, the number of good quality opportunities open to you academically in both of these places is vastly greater than what you can possibly experience in four years. This means that the quality of your education, whether it's in Harvard or Cornell, comes down mainly to the choices you make and the opportunities you take. Cornell gave me four years of incredible academic rigor, a wonderful experience with brilliant researchers in experimental particle physics and the fortune of meeting what must be some of the most supportive and nurturing academics anywhere. Just based on academics alone, Cornell would be my choice if I could choose all over again.At this point, I realize I'm mainly reacting to the underlying assumption of this question that you need a very good reason to pick Cornell over Harvard, which maybe isn't entirely the point of the question. But in any case, what I guess I'm saying is that choosing between universities is often a very naive exercise at the undergraduate level, particularly when comparing reasonably good universities. So go ahead and choose one over the other and make smart choices there: you won't regret it either way.	I agree with Mr. Wayne Tang. I think it depends on the field. Certain majors are the best at Cornell: Hotel management, engineering, and Labor Relations, etc..In addition to quality education at Cornell in these field, network that school has in these fields present additional and more practical benefits to alums and students. For instance, I studied Labor Relations at Cornell. Through ILR Semester internship program, I worked at ILO, United Nations as a sophomore. All UN internships require at least a master's degree to apply, and Cornell is the only program in the world that offers this opportunity to its undergraduate students. In addition, most top professionals in the field of labor relations and academic researchers are affiliated with Cornell University. Having that unique experience of living in Ithaca and studying at Cornell, offers a distinct commonality to alums.Also, Cornell is famous for interdisciplinary program among colleges within the University. You can take classes from any schools within Cornell. You can enroll to most classes online that are outside of your college. Even for competitive major requirement courses, most professors are amenable to let you take them. I'm not sure how Harvard is, but this is definitely unique to Cornell among other colleges. I called 12 top schools when I applied, to see if I can take art courses, and Cornell was the only school that said "Yes."; my major was pre-med biology/chemistry/engineering in schools I applied.There are many other things Cornell offer but I think they are more or less available in other Ivy league schools as well.	As some other respondents have written, Cornell has the notably stronger programs in some disciplines, and offers some top programs that are not available at Harvard at all.For engineering, Cornell is the top choice in the Ivy League - due to the general strength, and breadth of available majors.Cornell now has a formal undergraduate business school. Despite being newly constituted with its own admissions process, The Dyson School is already one of the hardest undergraduate programs, of any kind, to be accepted into. Harvard has no undergraduate business program.(In my opinion, with the trends of the last decade and more, Harvard should strongly consider establishing an undergraduate business program. The undergraduate business degree is really already the “way of now”. Traditional full-time MBA programs are shrinking as the opportunity cost to leave a job for two years becomes increasingly difficult to justify.)As others have mentioned, Cornell has long had the top or very top programs in Industrial and Labor Relations and Hotel Administration. Harvard does not offer these.Aside from the program differences, the breadth of opportunities at Cornell make it easier to follow unique interdisciplinary courses of study within the university. This is another trend that’s favors Cornell. For example, do you want to study psychology with a focus of decision making in a business - you would have better options at Cornell.The biggest reason of course, Cornell has the only real marching band in the Ivy League. Harvard has a scramble (or scatter band). When the Harvard band comes on at half-time is when you should find the facilities for a bio break:-)		
windows 98	windows xp	1. Win98 Support FAT file system & XP support NTFS And Also FAT. 2. Win98 Does not Having Remote Access facility While in XP there is. 3. win98 Does not need faster processing speed while XP Need 500mhz processing Speed. 4. Win98 Does not provide System Restore while XP Provide. 5. Win98 does not having Hibernate facility While XP having Hibernate Facility. 6. Win98 And WinXp layout And visual Styles are Different. 7. WinXp improve Device Support. 8. WinXP having CD Burning Facility,fast user Switching. 9. Ability to support multithreading to utilize hyperthreading feature.	Firstly, Windows 98 is an MS DOS based, emulated 32Bit OS. Windows XP is the real McCoy. It is based on Windows NT. Windows 98 SE uses FAT32 and has a partition size limit of 127GB (or 137GB depending on how you count kb). Networking is possible, but it doesn’t have the benefits and security of an NT-based system; the RAM limit is 2GB (in fact, even the 32 bit Windows 10 has a limit of 4GB of RAM as opposed to the 64 bit, which can have up to 512 GB); Windows 98, because of the limitations of the FAT system, does not support files larger than 2GB; and many more differences. The point is that Windows 95, 98, and 98SE were great in their times, and opened doors to what we have today. Windows XP (SP3) was the longest living OS ever. People still ask questions about it, but none compares to Windows 95 in 1995. That was when the “revolution” started.	Windows 98 was introduced with some graphical interface, an internet based operating system, improved hardware support for USB and DVD, system file checker and FAT 32 File System with some improved features Windows XP was the best operating system of Microsoft. Windows XP was the longest running operating system of Microsoft and it was introduced with lots of user friendly features such as new and very easy User interface, Remote desktop connection, Firewall for internet security, in built CD-Burner etc. Read more about Windows XP from the given article.		
apple	microsoft	Pros: Mac OS is more intuitive than Windows for users. Settings make more sense and things are just where you expect them to be. Spotlight search is a killer feature and far superior to Windows search. It’s quick and easy to use. Apple Support is amazing. You can run any OS on a Mac, including Windows. Just about any app will run on it unless it’s a niche app. Video and audio editing suites are usually superior on a Mac and since they are heavily used in that field, support is better as well. No viruses, little malware, and more secure overall. Apple’s built-in security is better than any anti-virus you can put on it and malware and spyware is quickly removed with updates. Apple hardware is well made, well supported, and the software is integrated, improving performance and battery life (battery life is amazing!) in spite of the middling specs at times. Battery life (because it deserves its own point). They’re very light and thin compared to most Windows laptops and even desktops. Also, let’s face it, they look better. There’s a lot of little things that you didn’t even know bothered you, but when you try to go back to Windows they’ll drive you nuts. Macs hold their resale value incredibly well, making for a low cost of ownership (initial price minus resale value divided by time owned). Owning a Mac is actually cheaper than owning a Windows computer. Cons: They’ll be a learning curve. It isn’t much, but it exists. If you’re a gamer, it can be a struggle. Most games are now cross-platform but often the Mac version is delayed and many games aren’t optimized for Mac hardware. Some niche business apps don’t have Mac versions. You can still run Windows, but it’s annoying. You have more options with a Windows computer from low end to high end and dozens of brands. Many Windows PCs have user installable parts. If you’re someone who likes to tinker with the hardware and upgrade their computer parts, you’re better off with Windows. Once you switch to Macs, you’ll hate Windows and never want to go back. If you’re forced to for some reason, you’ll feel resentful, frustrated, and upset. Your stress level will go up, endangering your health. (tongue in cheek) Overall, most people would be happier on a Mac than on Windows PC. Some people just don’t want to go through the hassle and initial cost of switching and are happy they way they are. I would say that if you do any amount of video, photo, or audio editing, switching is a no-brainer.	There are only a handful of areas in which Apple and Microsoft compete. Businesses tend to use Microsoft for corporate-level computing because of its wide array of software, SaaS and cloud computing solutions, all areas in which Apple largely does not compete. Microsoft Office productivity software is available and widely used on Apple devices. And there's the differentiator. Apple hardware products offer a "cool" factor that Microsoft has never been able to achieve. The iPhone, the iPad remain very popular --although not the market leaders -- in their product categories.. Microsoft leads in hardware categories, like gaming consoles, where Apple does not compete. Interoperability has come a long way since the '90s. Today, the answer is, use whatever products you're comfortable with.	There are a few limitations. First, Apple no longer sells a computer with expandable slots. Pros using Macs at this point, if they're not using old Mac Pro models with slots, are probably using high-end iMacs (27 inch 5k monitor, quad-core i7) or MacBook Pro notebooks if they can get work done with desktop-replacement notebooks. And the MBPs are beautifully made and powerful. There are specialized Thunderbolt peripherals, esp. in video and storage that will work on most Macs. Also Thunderbolt RAIDs, etc. Or USB 3 peripherals, of course. Professionals may also be using the cylindrical Mac Pro from 2013 that's still for sale, but that hasn’t seen an update since and it has no slots. Memory is expandable and the processor can be upgraded. I think that's it. Thunderbolt or USB for anything else. There are a few niches where Windows machines are clearly superior. Heavy Excel users (though Word, Excel and PowerPoint are available), possibly Autocad users (though AutoCAD is available), and QuickBooks users, for example. The Mac version of QuickBooks is inferior, if I understand correctly. Some people just prefer Windows, and for them the Mac probably wouldn't offer any advantage. macOS is not a Windows clone. It came first anyway. Try it out at an Apple Store or whatever. Get used to the interface. See if it appeals to you.		
fishing	skiing	The fun in Fishing appeals to many of our senses. Quite apart from the actual catching of fish, the sense of being at one with nature , in the open air and the wild environment is simply rejuvenating. In my lifetime some of the most successful fishing trips have been when I’ve used an Ordnance Survey map to select previously un-fished spots . Yes it takes time and effort to get to a secret location but the results are usually quite spectacular. The fish in an unvisited location are often much less wary although any fisher-person worth his or her salt would still be using all the stealth methods that are learned over many years .For those people who think that catching fish is what Fishing is all about think again. Being out in the open air is healthy and the opportunity to glimpse wildlife that lesser mortals will never see in a lifetime is well worth the effort; Birds, Otters Hares,Rabbits,Deer and more. You could say that catching fish is actually a bonus.I’m talking primarily freshwater fishing here. Sea Fishing will get you out on a boat or on a remote seashore(and in all kinds of weather) and is a different kind of experience. Many freshwater coarse fish can be edible given they come from unpolluted waters especially Pike or Perch. However fishing regulations need to be observed and using a catch and release system is to be preferred. One of the main arguments for returning fish is that of conservation.Summing up briefly : if you select an out of the way venue then you’re going to get plenty of exercise before you wet a line which will give you much improved health (if you fish regularly). This must be a good thing. What are you waiting for?	Here are several reasons I love skiing:It's incredibly meditative. Skiing is about finding and maintaining a balance. You're constantly seeking harmony with your body, your skis, with the snow condition, and with the steepness of the slope. The mountain changes all the time; in a few hours you can experience deep powder, slush, ice, all on the same trail. (That's why skiing the same mountain over and over again doesn't necessarily get old.) Because you constantly have to adapt to the current condition, skiing keeps you grounded in the present moment. If your mind starts to wander, you easily lose balance and fall, so there's your reinforcement to stay in the moment.Skiing makes you appreciate the winter so much more. It also gives you access to some of the most beautiful vista in the world. It's so amazing to stand on top of a mountain 13,000 ft above sea level. It's incredibly pretty and peaceful up there. On a quiet day when there aren't that many people around, I like to take a break somewhere on the trail (without creating safety hazard, of course) and just sit there for a while, soaking up the sun and the scenery. The feeling is similar to sunbathing on the beach, except that I'm fully covered, which actually is another plus for me because my skin is sensitive to sun exposure.I find skiing to be full of wonderful metaphors for life, such as: Once you choose a trail you can't go back (because you can't ski uphill), you just have to make it down there. Where you set your eyes really affect how you ski. If you stare at a ditch, you'll end up there. Steep slopes look super scary from the top, but once you begin to tackle them, they are usually not that bad at all. Also, slopes tend to be steepest at the beginning, and it gets better from there. It's always best to focus on making it one turn at a time. By doing this, the vertical drop stops being so overwhelming. Sometimes what's best for your skiing seems really counterintuitive (to the point of suicidal) at first, for example: to ski steeps, you *really* have to throw your body downhill (which seemed crazy scary to me and took me a while to be able to do). If you don't do this, your skis won't turn, you'll get stuck and fall. If you do it, your skis will follow naturally and you'll automatically be ready for your next turn. Weird huh?I love being fast and anonymous. Skiing is fast, and it's sort of anonymous since your entire body is covered up. Speaking of fast, somebody on Quora said that skiing is the closest thing to flying on land. That is totally true :)	I wish I could help but I play for the team from the darkside. That is, I Snowboards.That being said, I believe the universal appeal is:It offers a certain element of creativity and spontaneity. There's you and the open trail ahead of you. You pick your line and you go. The rest just happens.You can progress at your own pace. For most it's not a competition but a challenging / relaxing activity.It burns calories and works up a thirst (read: apres ski). As first sips of beer go, nothing beats the first sip after a day on the hill.It's good for the soul. Nature, fresh air, blue skies, sunshine. Many, many things that are pure and good with the world.Alternatives such as work, TV, doing laundry, shopping, etc. don't begin to compare.		
windows 7	windows 8	The answer depends on you. From a technical standpoint, Window 7 is less stable and uses system resources less efficiently than Windows 8. Additionally Windows 8 can run Metro apps that cannot be used on Windows 7 machines. Basically, Windows 8 can do everything that Windows 7 can do and more as--mentioned by Sean Phạm. You do however have to learn some key new interface changes--for example hot corners and the start screen. These have a reputation for not being intuitive for mouse and keyboard users. I tend to disagree, because I use Windows 8 on a daily basis on my non-touchscreen desktop and laptop, for coding, gaming, web browsing, document authoring and other common tasks. I don't feel any slower with Windows 8 than Windows 7. If you're willing to learn the interface changes, then Windows 8 is a win-win situation. Otherwise you might want to stick with Windows 7 and forgo the stability improvements and other small improvements of Windows 8.	Though Windows 8 does have some improvements "under the hood" from Windows 7 the changes are not groundbreaking.  The new user interface is groundbreaking but ground breaking like and earthquake.  The departure from the standard desktop model was shocking for keyboard and mouse productivity users, and many rebelled.  Outside the "under the hood" improvements (which don't have any profound effect most users) it comes for to two things: (1) Is your computer touch enabled? Windows 7 touch features are crude on a good day.  Using touch?  Get Windows 8.1 and let it auto-upgrade to Windows 10. (2) What OS are you moving from? If you are a Windows XP user get Windows 7.  The transition from XP to 8.1 may cause your head to explode if you need to be productive immediately. If you already use Windows 7 at work or on your old personal computer, stay with Windows 7.  You'll get the free Windows 10 upgrade and Windows 10 blends the best of Windows 7 and 8.1. If you use a Windows Phone the interface isn't such a leap.  You'll spend some time finding "stuff" but with a bit of patience you'll adjust, eventually. Neither is a BAD choice.  It's really how much time and effort you want to spend making the transition. If you are making the transition from XP or 7 to Windows 8, consider going to OS-X as it's about the same effort.	Let's compare. Performance. Windows 8.1 or 8 works faster than it's brother windows 7. It supports various file formats. And pre installed apps. Start. Windows 7 has a congested start menu. With everything smaller and a white background. But windows 8 or 8.1 has a start screen with more space and customisable background. Actually start screen is far better than smaller start menu. Programs. Windows 8.1 and 8 both support enormous programs. You can even install programs from the Microsoft store. It offers more advanced and updated version of programs. Boot time. Windows 8.1 and 8 both offer a quick boot time Than it's brother. Windows 7 takes time. Security. Windows 8.1 and 8 offer updated security patches. It also has various password options. Windows 7 password can be accessed/hacked easily. Gaming. Windows 8 versions offer much graphics support than windows 7 with it's graphics drivers and pre installed direct x 11. Development. Windows 8.1 users can use or switch multiple options for software development. It offers smooth running of heavy software. You can use both command prompt and power Shell in it. You may support windows 7 due to it's popularity and interface. But remember that we shouldn't judge a book by its cover. Since you're using Windows 7 you may feel that it's better. Update your hardware and use windows 8 you'll feel the real power		
pasta	pizza	At every pizza/pasta buffet style restaurant I’ve gone to, people eat more pizza than pasta. That must mean they like the taste of the pizza over the pasta. However, another part of the equation is that the pizza comes in all kinds of toppings and cheese, whereas the pasta offerings are usually limited to spaghetti, maybe something like sea shells, possibly lasagna, but that’s about it.Now in regular higher end full bore Italian restaurants, diners seem to purchase pasta over pizza about 5 or better to 1. These restaurants usually have a better overall quality in their food, so perhaps that means that good pasta is better than good pizza. It might also mean that with lower quality (cheaper) Italian food, the pizza usually turns out better tasting.Until they dropped their lunch buffet, I used to regularly dine at an Italian restaurant that had exceptional food, but while the buffet was on, I found that their pasta and pizza was of equal quality and ate about a 50/50 split between pasta and pizza.If I had to pick one, though, I would say pizza tastes better than pasta.	i mostly prefer pasta . why pasta? it is because pasta is healthier than pizza. you can have pasta anytime,Pasta is a perfect foundation for healthy, nutritious and satisfying meals: pasta is generally eaten with nutrient-dense food partners, such as fiber-filled vegetables and beans, heart healthy fish and monounsaturated oils, antioxidant-rich tomato sauce and protein-packed cheeses, poultry and lean meats.pasta is healthier choice.	Pizza and pasta are both foods I like. I like pizza because of all the toppings that you can put on it (not to say that pasta doesn’t have variety either), and because it is fun to pick up and eat. While homemade pizza is usually delicious (I cannot recall making a homemade pizza that tasted bad), some pizza is just weird and oily. Sometimes I even try to get some of the grease off with a paper napkin! Pasta, on the other hand, almost always tastes good to me (but I’m not an expert), as long as it’s not mushy or under-cooked. So I am not sure which one tastes better. I like both pizza and pasta.		
java	python	Exec Summary: Python better for short programs/prototyping, Java better for big projects/mission-critical stuff. Details follow. I use both Python and Java on a daily basis, mixing and matching as the needs require. Increasingly my workflow is prototype in Python, then migrate to Java once we've got the design right, worked out the kinks. Python is much quicker to prototype in. Things like the functional programming, lists as first-order primitives, tuple return values, "duck" typing and the fact that the console is available for debugging easily and testing quickly really give it an edge. Python is my "1000-line" language -- it's what I use for projects that expect to be around 1000 lines long. It works well for procedural tasks. It is also very concise. However, Python doesn't scale as well as Java for large projects. Java is my "100,000-line" programming language: what I used for complicated data structures, mission critical services, etc. Its static typing really makes it more manageable at large code scales; or where you are building "toolkits" that need to be re-used to implement a wide range of functionality, or across many applications. With Python, you'll get AttritbuteError: None, and not know exactly what to do with it. Java is more verbose than Python, but it pays off -- it's more readable. Furthermore, the tools and IDEs (e.g. Eclipse, NetBeans, IntelliJ etc) are amazingly good for Java -- because Java was designed for static analysis. Python, less so. IDLE is OK, but it's not at the calibre of the tools. Java also is truly cross platform. I have written libraries in Java that run on both Android phones with tiny RAM, and also run in 10,000-machine datacenters, with each machine having Xeons and 20GB+ of RAM. That's kind of awesome. The Java core libraries are very solid and provide an excellent basis for things like GUI applications. Python has a few options for GUIs, but I haven't found them to be as solid. Finally, in terms of performance, Java is clearly the performance winner -- not quite as fast as C++, but in most cases no more than 1.2x or 1.3x slower. Of course this is fuzzy, there are things like Jython, and PyPy, but they take away some of the advantages of using Python in the first place.	The pros of Java over Python are: Java programs execute faster as compared to Python. Java application are much more stable and secure as compared to Botha s they basically run in a virtual secluded environment which is the JVM. It can easily handle very large data sets and work efficiently. The java applications are much more scalable. If you are working with databases then JDBC and ODBC in Java can easily help you out whereas on Python the database access layers are a tad bit underdeveloped. This point might not be true for all but I personally find it extremely difficult to debug Python indentation errors. Whereas the java braces are very easy to spot and rectify. Basically moving the code from editing in one IDE to another is a nightmare. Now for the pros of Python over Java: Python codes are much compact and easier to comprehend as compared to Java codes The learning curve of Python is easy and it can deliver some pretty complex programs in a matter of lines. Python is dynamically typed and there is no need to declare anything. An assignment statement directly binds a name to an object, and the object can be of any type. Python has become the backbone of Internet of Things. Infact the Pi in the Raspberry Pi stands for Python. A huge set of tools for Data Analysis, Scientific research are written in Python 2 which are currently being rewritten and upgraded to Python 3. Python's feature of Integration makes it possible to call Python through java via Jython.	Python is much simpler, easier to learn and easier to write. Since it's a dynamic language, you don't need to write low level details such as the type of each variable or the length of arrays, for example. Python programs are shorter and require less boilerplate. The code is more readable, more English-like, and more succinct. Another advantage of python is that you don't need to compile the code before running it. The interpreter executes it right away, and you can even use the interactive shell to try, explore and experiment while coding. Java, on the other hand, is a static language. It means that its code must be compiled before getting executed. So you don't have the interactivity you get with Python and its interpreter. Also, you must declare all the types in advance and provide much more information in your code so it can be successfully compiled. The advantage of Java is that all this hard work usually pays off in the form of superior performance. Python is faster and easier to write, but slower to execute. Java is more “burocratic" and rigid, but results in faster code.		
ps3	wii	I own both the Wii and the PS3 and my personal opinion is that the PS3 is the better platform, but it completely depends on the type of games that you play and what you're used to. I've always played on a PS so I'm used to the controller. I find the xbox controller to be more bulky and the placement of the analog sticks puts more strain on my thumbs and just makes playing harder. For example, I started out playing Bioshock on someone's xbox and I had to actually invert the controller for some reason because when I kept moving my thumb the opposite way I was supposed to be. But when I started playing it on the PS3 when I bought mine, that didn't happen. It was really strange. As for the Wii, I literally only have it to play old Nintendo games. I hate - hate - using the Wii controller. It's inaccurate, it sucks as what it's supposed to do and is just frustrating most of the time. The only thing I can say that it actually did well with is the Mario games, but even then, they can get really frustrating because of the controller.	I own all three and I can honestly say that I think the PS3 is the best system. The Wii is fun when you have a group of friends over, but not that great when your alone. Xbox 360 is a good all-round system; lots of popular games, but you have to pay for online membership/services. PS3 has the best games out at the moment, doubles as a Blu ray player and is superior when it comes to media playback.	This question depends on the individual. My personal opinion is that the best system is the one that has the games you want to play. Now, for me that happens to be the Playstation 3, since I do not care much for first person shooter titles. Most games these days are released on multiple platforms though. I also love the fact that the PS3 can play Bluray discs. I enjoyed several of the games on the Wii (i.e. The Legend of Zelda: Twilight Princess), but I grew tired of the motion controller and eventually went back to playing it on the GameCube so I could use a "normal" controller.		
harvard	mit	In the long-term, both of their brand names carry a lot of value. MIT may have slightly more value in the hard sciences. Harvard may have more value in other fields, including among the general populace.The conventional wisdom on campus is that MIT is better for sciences, math, and (more recently) media studies, whereas Harvard excels in the social sciences and liberal arts. Both schools allow cross-registration for courses at the other, so you can access a full catalog at both institutions regardless of your choice.Socially, I can only speak from personal experience. MIT’s stereotype: the nerdy, socially awkward student. Harvard’s stereotypes: the elite school prep students mixed with the desperate go-getters. Whichever crowd more suits your personality, you may like to go to that one.Harvard’s architecture feels old and creaky. The buildings have an 1800s flavor. The architecture at MIT feels much more updated and modern. Personally, I enjoyed being on MIT’s campus more, but my family liked Harvard’s rich historical flavor better. That’s a matter of taste.Ultimately, the choice is yours — both schools have value. I would personally pick the school with more classes that I’m interested in, because traveling back and forth can be a bit of a pain.There is one other element… Harvard has some troubles with Title IX. This means that if a sexual assault happens on campus, the school is likely to attempt to bury it and minimize its impact as much as possible, even if that violates the law. MIT doesn’t seem to have those problems to the same degree. Also, because of Harvard’s well-known name, frequent campus protests occur, and it can be easy to feel a sense of dissatisfaction and irritation with the leadership. I would be remiss to promote Harvard without mentioning these issues. If they don’t bother you, or you don’t think they would affect you, then Harvard is still a great choice. (Personally, I haven’t been bothered by the protests, and the Title IX issues haven’t directly impacted me.)	[Edit: I take it back; Harvard is going to be cheaper if you need financial aid.]It’s easier to coast through on the “gentleman’s B” at Harvard, without question. You can challenge yourself at either school, but MIT grades harder. I do think this gets adjusted for when you’re applying for first jobs or graduate school, and after that, nobody cares about your GPA.People are busy and stressed at both places, but why they’re busy tends to be different. At MIT, they’re busy with school and research, though most people have a light hobby that gets them out of the dorm and keeps them sane. At Harvard, they’re more likely to load up on the extracurriculars, and take them seriously - DI sports instead of DIII, campus newspaper space fought over by people who’ve wanted to be journalists since they were five, etc.If you get into both, I think it comes down to whether you want a liberal arts education, or you want to nerd out and become the best nerd you can be. I chose the latter, but it was a tough choice.	MIT if you’re going for pretty much any STEM related field.Harvard, if you’re heading for an MBA & Wall Street, or law school, or politics, or the humanities. Probably also better if you’re heading for teaching.The above comments are based on the connections you’ll make, and where you might want to head for grad school, as anything else. I.e., MIT is probably a better route into high tech companies. Harvard is a better route to Wall Street, unless you’re a “rocket scientist” working on trading software in which case MIT is a better bet.On a different note (and perhaps just a tad biased):MIT doesn’t accept legacies. At MIT, you’ll be surrounded by folks who earned their way in, the hard way.MIT’s top professors (i.e. Nobel Laureates and equivalent) take it as a point of pride to teach undergraduate courses (often the introductory ones). You won’t see the top professors as much, at Harvard.MIT emphasizes undergraduate involvement in research (the UROP program) to a level that’s unparalleled anywhere else.		
java	php	PHP Advantages: 1) It is not a complicated language to learn and put to use. 2) 90% of web hosting have apache with WAMP/LAMP installed in them by which you can get started in minutes. 3) Many errors encountered by you they would already be solved on StackOverflow, so your errors can be solved easily. PHP Disadvantages: 1) It is a bit slow when compared to other languages. 2) It has only be put to applications which require (create||read||update||delete).So, you can't do machine learning and other stuff. 3) PHP websites are easy to hack and for hacking PHP scripts resources are available online. JAVA Advantages: 1) JAVA has an enormous amount of tools for expansion of projects like spring, hibernate which uses microservices to deliver robust performances. 2) One of the best and the oldest programming language, So resources would be available to those who ask for it. 3) JAVA can be used for multiple things like making android apps, doing machine learning/deep learning, training a neural network, robust web development through SPRING/HIBERNATE. JAVA Disadvantages: 1) Not an easy language to learn and put to use. 2) Specialised hosting is required for JAVA applications like AWS/Heroku. I learned both of these programming languages and I am good at both of them.	Benefits of PHP PHP is a top programming language used by web developers and it provides a number of benefits including: Easy to Learn ;Open Source; Efficient Coding Language Plenty of Support. Benefits of Java: On the other hand, Java provides many benefits as a programming language. Some of the key benefits include:Easy to learn; Object Oriented; Platform Independence;; From the benefits above for both Java and PHP, it’s clear they are both very powerful. However, many programmers that use both languages will tell you PHP is the better choice. The main reason programmers choose PHP over Java is the speed. It’s much faster to develop and PHP tends to have fewer issues when using shared hosting. When using Java, it’s best to have a dedicated server for your hosting.	Java is considered to be one of the most relevant and reliable programming languages there is. This explains why many companies prefer to hire developers that have a fluency in Java. The unique value that Java has as a programming language is its stability and scalability. It isn’t an easy programming language to master – and even though Java might seem the most attractive language to learn for a future career you should bear in mind that it’s not easy to learn. I would argue that the online courses that state you will “learn programming in Java within a week” only provides you the very basics of this sophisticated language. PHP, on the other hand, is characterized as a free, flexible, and fast programming language. Even though both PHP and Java are integral to the modern web, PHP is an obvious choice for those that aspire to begin their career and want to start specialising in a specific language. As opposed to Java it requires less programming knowledge and it’s more accessible to inexperienced developers. Whilst there are similarities if you do want to specialise in either of them you need to ask yourself something: Do you want to work with the web or do you want to be working on desktop and native mobile apps? Because if you stick your specialisation in PHP, you’ll only be developing for the web, whereas Java can do both. Nonetheless, both languages are an on-going requirement for businesses		
mit	stanford	Been there, done that (well, not CS). Lots of differences, some similarities, here's a few:1) MIT is more intense. You will find out all the gears you have and discover your limitations by constantly trying to exceed them, and also discover they are different than what you thought.2) I seriously doubt either results in a different educational outcome. When you take in the best, it takes no alchemy to turn out the best. Both will give you great networks.3) Stanford has a much better climate.4) MIT is in a (somewhat gritty) urban setting, and you have access to a major US city with a huge (way over 100,000) student population without a car.5) Different cultures.  Which one suits you better is a personal choice.  Stanford students are pretty certain they have the world by the short and curlies. MIT students think the world is logical and that if you are smart that is all that matters, and if you aren't, nothing will help. MIT has never awarded an honorary degree, the only way to get one is to earn it.  Stanford has elite sports, lots of them plus a PAC10 football team and an 80,000 seat stadium.  MIT offers as many sports, but they are participation based. Their football field has a few bleachers.  Etc.6) social life depends on you, and who you hang with.  In my experience, MIT mixes more, Stanford tends more to smaller social circles.   Stanford tends to reflect California, so everyone is very friendly, but it is hard to make close friends.  MIT's social scene is supplemented by access to the scenes of every other university in Boston.	I am going to go with Will Gaherty's answers as he has studied at both colleges.I studied for nine years (and three degrees) at MIT.I visited Stanford, and played ice hockey with the Stanford team and against the Stanford team (long story, but UCLA was the opponent when I played for Stanford team).  The entire Stanford hockey team (grad and undergrad students) stayed at my house in the Boston area and in my small apartment in the Los Angeles area (another story unto itself)....So, my on-campus experience with Stanford was visiting its beautiful campus (or as beautiful as brown grass can be in the dry season) and associating with the men's ice hockey team.The Stanford campus is much bigger and with NCAA D-1 sports the athletic facilities are much bigger.  Sometimes the most desirable athletic facility is restricted to Varsity athletes (but that happens at many D-1 colleges) whereas at MIT every facility is available to all students.MIT is in Cambridge and a mile from Boston, with Many thousands of college students in the area, the social life is easy to attain/maintain.  Stanford is a bit more isolated and therefore you will socialize mainly with Stanford people................  Also, it is Not that easy to get from Stanford to San Francisco and that can be a limitation.I noticed that Many of the undergrads at Stanford come from very Affluent families and that sets a certain social tone.   Whereas MIT students are more across the spectrum.Before you Accept and attend any college, you MUST visit, and visit for several days.   The final thing to consider (which is the most important), is which college is a best fit for You?	A2A. I haven’t attended MIT. I’ve only gone to their campus preview weekend (a.k.a their admit weekend for accepted students) and I have friends who attend there.Both MIT and Stanford have students with a variety of personalities, which means you’ll probably find a good fit at either school. You’ll find Greek life, you’ll find people who don’t leave their dorms on Friday nights. You’ll find builders and thinkers and everything in between.I’d say MIT is a bit quirkier, and their hacks (not necessarily hacking using a computer, but any kind of big-scale prank) are hilarious and admirable. Their dorms have a lot more individual personality than dorms at Stanford, which aside from co-ops and self-ops, are pretty homogenous. Cambridge/Boston is a bigger city than Stanford/Palo Alto. With these geographic differences, MIT is exposed to the “real world” a bit more, while Stanford is a huge, isolated bubble of resort-like paradise. MIT is an institute of technology, while Stanford is expected to be more well-rounded (we’ve put a lot of money into arts and humanities in recent years).		
coca-cola	pepsi	Coke lasts longer fizz wise once opened, But can be too fizzy when first opened. Pepsi is the right fizz when first opened but does no keep its fizz longer than coke once opened. AND LETS GET REAL! It always needs to be SUGAR coke or Pepsi, none of this diet piss that does not promote dieting in any way. The key to not getting diabetes is everything in moderation! As our parents and grandparents tought us, none of mine had diabetes, and neither do I and I’m 54 now!	Pepsi required quite a substantial minimum order, while Coke allowed you to order as little or as much as you like. This was fine when making a regular order, but sometimes you would sell out of one product before you needed more of any of the rest. Coke would allow you to make order just a couple cases. With Pepsi, you either had to wait until the next regular order, or order a lot of extra that might become outdated if it did not sell fast enough. Coke would also let us pick up our own order at the bottling plant, and save the delivery charge. The plant was 100km away so normally the delivery charge was cheaper than driving to pick up an order. If we happened to be in the area for other reasons, however, it was nice to stop in and pick up the order. It was also useful when making the above mentioned small order for a product you were out of. It was not economical, but it kept the customers happy and coming back. Pepsi on the other hand would not let you pick up an order. It absolutely had to come on a regularly scheduled truck. Pepsi also would only accept a corporate check in form of payment. With Coke, you could pay by check, credit card, interac, or cash. Of course, those could have just been the differences in the local plants rather than the companies as a whole. I don’t consume very much soda, but as a result of those dealings, when I do, it is a Coke product or an independent rather than a Pepsi product.	Pepsi has more sugar than Coke, originally double the amount.  Brand expectations from years of marketing condition consumers so if they can see a label, they choose the one whose marketing rather than taste has most effectively reached them. As a company, Pepsi has long been much more diversified and relies on independent bottlers for market knowledge, aggressive customer service, and physical distribution. Coca Cola's gradually bought up most of it's independent bottlers both for control and capturing those profits as well.   Energy drinks have already surpassed soda pop sales both in general and at Coke & Pepsi (with their dualing bottled waters Daisani and Aquafina also big and profitable.) Both have deep and effective management with brands tremendously reliant on heavy marketing expenditures and extremely adept and responsive distribution to retail stores and restaurants.   Those make for huge barriers to market dominance and beverages that do well from independent developers generally get acquired by Pepsi or Coke as they become significantly nationally.		
mysql	oracle	Oracle is the leading database management system released by Oracle Corporation. MySQL is a database management system sponsored by a company named MySQL AB. Now, MySQL is also acquired by Oracle Corporation. Compare the major differences between Oracle and MySQL points wise. MySQL : 1. MySQL is an open source and MySQL is available for free download and installation. 2. User authentication is performed in MySQL by using only location, username and password. 3. Flexibility of creating stored procedures and functions using PL/SQL is very less in MySQL. 4. MySQL offers very few commands related to generating output as report and defining variables. MySQL includes only very simple SQL commands. 5. MySQL does not have the audit vault feature in the server. 6. MySQL does not offer tools at enterprise level. 7. MySQL has only table locking facility. 8. MySQL does not have extensive storage features like tablespace, synonym, packages and many others. 9. MySQL database does not support XML. 10.MySQL supports only two character types namely CHAR and VARCHAR. 11.MySQL, temporary tables are visible only within the current active session. When the session expires, the temporary tables are removed automatically. 12.MySQL has only two backup mechanisms namely mysqlhotcopy and mysqldump. Oracle : 1.Only Oracle Express Edition is free of cost. But Oracle Express Edition has very limited features when compared to MySQL. For extensive features, either Oracle Standard Edition or Oracle Enterprise Edition has to be purchased. 2.Oracle provides enhanced database security. User authentication is performed in Oracle by specifying global roles in addition to location, username and password. In Oracle, User authentication is performed by different authentication methods including database authentication, external authentication and proxy authentication. 3.Oracle provides more flexible features for creating stored procedures and functions using PL/SQL. 4.Oracle includes extensive SQL commands in SQL*Plus including commands for generating output as report and defining variables. 5.Oracle provides audit vault facility. 6.Oracle offers tools at enterprise level. 7.Oracle provides the row locking facility as well. 8.Oracle has a very extensive storage features. Oracle supports tablespace, synonym, packages and all other features. 9.Oracle supports and uses XML. 10.Oracle supports four different character data types namely: CHAR, VARCHAR2, NCHAR, NVARCHAR2. 11. In Oracle, temporary tables are persistent across sessions. The temporary table has to be explicitly removed by the User. 12.Oracle offers many backup mechanisms including hot backup, backup, import, export and many others.	There are many more differences between Oracle and MySQL.We can summarise them as follows- 1.Oracle is way more powerful than MySQL 2.Oracle supports distributed databases while MySQL doesn’t 3.Oracle supports save points while MySQL doesn’t 4.Oracle allows programs within the database while MySQL doesn’t 5.Oracle is suited for enterprise deployments while MySQL is suited for small to medium scale 6.Oracle requires that you pay a licensing fee while MySQL doesn’t	Both are relational database management systems, i.e. the information is organised in tables (aka relations) and accessed using relational operators through the SQL languages. The main difference between MySQL and Oracle is the first one is Open Source (i.e.developped by a community) and does not require any paid license, whereas Oracle is commercial and developped by Oracle only (and can only be used with proper paid licenses). There are also obviously technical differences, just like with other databases (SQL Server or PostgreSQL). As for dialects, they represent differences in the way the SQL language is implemented. While the language is an ISO standard, no database vendor implements it fully: the standard is divided in parts and levels and vendors typically implement only some of the elements, and often with different interpretations, leading to different dialects.		
mouse	rat	The type of rat you're normally going to encounter is the Norway rat. The obvious difference is a rat is several times larger than a house mouse. At rats tail is longer than it's body. The feces is about 3/8ths of an inch verses 1/4 inch of a mouse. House mice are grey in color compared to grey, ruddy brown of a rat. Mice travel only a short distance to forage for food whereas rats will cover a larger area foraging and also, rats are more likely to dwell in holes in the ground close to a structure where food and water are available	In simple, both share several similar morphological traits. But they differ in terms of diversification and types, size say e.g.. Rats can have a size as small as mice, to as big as Bandikoot (weighing to a maximum of 3 to 4 kgs) — rats can weigh from a few grams to 4/5 kgs. Mince weigh only grams and they are not as diverse as rats.	Differences Between Rats and Mouse Mouse Size: Mouse measure 12 to 20 cm in length, including the tail, and weigh 12 to 30 grams. Color: They may be white, brown or grey in color. Head: Their snouts are triangular and feature long whiskers. Tails: They have large, floppy ears and long, thin, hairy tails. RatsSize: Rats are medium-sized to large rodents. However, rats may grow to be as long as 40 cm or more and weigh considerably more than mice. Color: Their coats are white, gray, brown or black in color and are often soiled enough to leave grease marks on touched surfaces. Head: The snout of the rat is more blunt than that of the mouse. Tails: Long tails that are commonly hairless and scaly		
python	ruby	Python has more rules, better documentation (3rd party and built-in), and stricter style. This makes it much easier to read. Ruby can be terser, and has more acceptable (stylistically) approaches to any number of problems. You'd probably do better learning Python first, at the very least because there is a right and wrong way to do most things, and also because there are more general computer science resources for Python than Ruby support or education.	Ruby:There's more than one way to do the same thing: Ruby is a dynamic, reflective, object-oriented, general-purpose programming language. Good for beginners? Yes – Ruby is a High level, enjoyable, general purpose language. High level means it’s extracted away from the hardware of the computer. You can speak in terms that are more human and less computer. Companies that use Ruby: Hulu, Twitter, ZenDesk, Basecamp, Shopify, Urban Dictionary, GitHub Python: There's a most understandable way to do something and that is how it should be done. Python is a high-level general purpose language that can be used to write a short script, build an API, or even build a complex object oriented web spider. Good for beginners? Yes it’s a high level, powerful, general purpose language (spans many industries). It’s similar to Ruby so once you’ve learned Ruby, it’s not too hard to pick up Python. Companies that use Python are Google, Yahoo Maps, Dropbox, Venmo, YouTube.	Ruby is only better to write DSLs, but writing DSLs with Ruby is still hard. Most of Ruby work is with Rails, which was a very influential framework, but not anymore. Python is used for web development, data science, machine learning, scientific computing and finance. Python can be used for pretty much anything. To develop web sites you will need JavaScript, but JavaScript can be generated from ClojureScript or Elm. There are better general-purpose programming languages than Python, like Haskell, because it is a functional programming language and it has an advance usage of types. Python is dynamically typed, and this will lead to many bugs during your development. Last, Python promotes OOP, which is actually a bad programming practice: holding state in objects is a pretty bad idea, state should be constrained by Monads or by actors like in Erlang. So, if I were you, I would not spend a lot of time in OOP books and design patterns, I would spend more time with algorithms, programming challenges and functional programming techniques, you can do FP in Python, if you want to, but it is much harder then using Clojure or Haskell.		
beer	cider	I love cider! Well, real or craft cider made in the traditional way. 100% fresh pressed with nothing added to it or taken away.There are so many reasons… but we love that it offers an authentic connection to unique UK landscapes. You can taste a time and place in a sip.So many apple varieties. ‘How do you like them apples!’With so many different apples across the globe and the ease at which cider is blended, it was only natural that the cider industry would start to be able to offer 1000’s of different tastes that would suit even the most obscure pallet. From toffee apple ciders to ones infused with chili, these days it doesn’t matter how you like your apples cut, the options are endless.Rich HistoryIt is thought that Cider was first introduced to the UK as early as 1066 by the Normans. As it turned out these fellas really knew their stuff and it wasn’t long before cider was the drink of choice for every man and his dog. It became so popular in the UK that workers started to get paid in cider.Farmers even had a rating system for their workers based on the amount of cider they could drink. Suggesting a 2 gallon a day worker was worth more than their weight in gold. So arguably you could even suggest that this great nation was built on the stuffCider pairs with food SO SO WELL!It has more flexibility than either beer or wine. And it doesn’t overwhelm delicate, light dishes.Why? Its natural zesty acidity and endless flavor notes mean there is a pairing for almost any dish. From a light, summery watermelon + feta salad, to Thai food, to hearty, cold-weather stewsCider is naturally gluten-free.SORRY beer that is a massive trump card in today's landscape.Complex & More Like Wine in TasteIt is delicious, nuanced and surprising. Real cider can be crisp or earthy, sweet or dry, citrusy, floral or smoky. It’s a wild and wonderful world that is going through a renaissance. New ciders emerge every season and every year.	It’s entirely subjective. Cider’s great for those that want a fruitier taste, but not as fruity as a cocktail. Of course, there are several beers that have a citrus taste if that’s what you’re after. Usually, they’re wheat or sour beers. Also, beer (and even cider) has countless varieties so it’s hard to say one definitely tastes better than the other. Lastly, some people even believe that the type of glass you drink your beer from can impact that taste.With all that being said, I’ll take a beer nine times out of ten. However, anytime I have a cider I always tell myself I need to drink more cider.	I prefer cider as I found it to be more my type of drink. I found that, with cider, you have such a large variety of flavours (some of which I had never heard of e.g. irn bru cider over here in Scotland) and that research has proven hard cider to be good for your heart		
facebook	google	Facebook is definitely more powerful than Google.The reason being Facebook has more options and detailed info about a customer than Google.1.You can target customer based on demographic.2. You can target on interest based.3.You can create a custome audience on the basis of age, gender, interest.4.Can create a look like audience based on the customer audience which is a powerful option on Facebook.5.More users than Google.You can find more information on Facebook marketing on the below blog.	Both have a HUGE reach, but Google has a larger reach. For Google, you don’t need an account to see the ads, you just have to be searching something, so your ads will be seen by more people that way whereas on Facebook, people need to have an account in order for ads to show up.Google also owns Youtube so you can place ads on youtube as well which is great.Facebook is generally cheaper to advertise with compared to Google.Facebook owns Instagram and will place your ads across Instagram as well for very cheap.I would suggest starting with Facebook/Instagram for ads and then move to Google once you’re more experienced in advertising. You can get away with $5/day with Facebook to get great sales, or exposure and while that’s possible with Google, you’re more likely to spend $25 or more/day. It completely depends on what your selling or showing.	I believe that both Facebook and Google offer different and effective opportunities to businesses. Although I understand that both equally have their downfalls, I think that marketers can find ways around this harness both channels.I’ll summarise my thoughts below, but if you’d like more information, feel free to read more about it here.FacebookPotential customers use this platform in their free time, making it the perfect channel to build brand awareness.The use of Facebook ads is on the rise - it not accounts for 65% of social network ad spend.Because it is such a huge platform, many marketers complain that they don’t know who they should be targeting, and with that.Integrating your Facebook data with everything else you know about your customers - such as previous purchase history or website activity - can help you improve your targeting.A Customer Data Platform combines this data and feeds it into Facebook to produce highly personalised content to leads to conversions.GoogleEvery person who is searching on Facebook is searching for something specific.This presents a huge opportunity to marketers to capture potential customer’s interest.However, every marketer likes to capitalise on this channel - making competition and, as a result costs, highBy harnessing artificial intelligence and machine learning to automate your keyword bidding based on your customer’s real-time activity, you can avoid over or under spending on PPC campaigns		
california	virginia	I’d say it’s a great place for a family. Whether you choose to live in Richmond proper or in one of the surrounding suburbs, you’ll find affordable housing (compared to California, anyway), a climate with four real seasons, and lots of things to do and places to go. Plenty of opportunities for culture and entertainment with excellent museums, theatre, and live music any night of the week. It’s got great restaurants and many microbreweries, most of which are family-friendly so you can enjoy craft beer with the kids in tow if you so desire.The schools in Richmond City are kind of a mixed bag—there are several excellent elementary schools (Fox, Mary Munford, and Holton) but the middle and high schools are admittedly not the best. There’s time for things to improve if you have younger kids. Or, the suburbs have great middle and high schhols as well, particuarly in western Henrico county and in southern Midlothian.The job market is good here, though it depends on what field you’re planning to go into. Major industries include banking, state government, and health care.I moved here in 2012 with my fiancee and have since gotten married, purchased a house, and my wife had a baby this year so it’s the city I’ve chosen to raise my own family.	I have lived in both Richmond, Virginia and Los Angeles, CA, so I have a pretty good idea of the adjustment a Southern Californian would be making by moving to Central Virginia.The cost of living in Central Virginia is a fraction of what it is in most areas of California. You can get much more house for your money in Richmond, and that’s important if you have a large (or growing) family.Suburban public schools in Richmond’s surrounding counties (Chesterfield, Henrico, and Hanover) have good test scores and amenities. They offer a wide variety of extracurricular activities. Schools in the City of Richmond are hit or miss, and many parents within city limits send their children to private schools after they finish public elementary school.Summers in Virginia are ridiculously humid. The dry heat of California and the surrounding desert states is much more comfortable than the humidity on the East Coast, but the benefit of that is there are four distinct seasons in Virginia. The change of seasons is exciting, and the variety in weather makes up for the steamy summers.Virginia boasts beautiful beaches and mountains just like the Golden State. People are friendly, for the most part, but most rural areas do still have a bit of a “good old boy” feel.If you’re looking for a wide variety of healthy, organic dining and shopping options like those in California, I recommend living in Northern Virginia to take advantage of the D.C. Metro area’s more cosmopolitan offerings. Richmond is only starting to catch up with major metropolitan areas in those areas, but Richmond’s arts scene is thriving, and it is becoming known as a foodie town.I very much enjoy Richmond. The traffic isn’t terrible; the cost of living is low; the options for outdoor activities are plenty; the mountains, the beach, and the nation’s capital are all two hours away; there is history galore; most arts offerings can be easily found; and the people are polite and friendly.Still, I miss California every day. The “Hotel California” is real. I checked out 20 years ago and headed to Virginia, but my heart and mind still linger.	welp I have lived here my whole 16 years of life and I would say ya.there are some great schools all over Richmond for all ages and lots of good colleges in the stateand while there is the in avoidable crime there is defiantly not as much as other places I hear about and especially if u decide to move into the west end of Richmond or south side there is les crime therethe weather can be a little bit wonky at times because of the mountains to our west and there is of course the occasional hurricane but since u live in Cali I will say we have only had one earthquake in my life time and we haven't had a major fire to my knowledge here yetthere is lots of apartments and condos being built all the time and people who live in houses are moving into the which frees up housing so there is plenty of that all overthere is plenty of shopping and entertainment options all over Richmond also ranging from paintball/airsoft fields to movies or spas there is lots of stuff(which is great for teens *cough cough me cough*)there is also an abundant amount of jobs here for any field but especially IT and doctor/nurses		
advil	motrin	Ibuprofen is a medication; this is it's generic name. No matter who makes it, it is always called Ibuprofen. But  medications kind of have first and last names, in a way. For example acetaminophen is also called Tylenol- Tylenol is the trade or proprietary name for a paracetamol preparation. Ibuprofen is called Motrin (when made by McNeil pharmaceuticals) or Advil when made by Pfizer. Many "trade" name medications are identical to their generic counterparts and sometimes, are made in the same lab/ manufacturing facility. There is some belief that generics can be healthier as they often don't include colours or fancy shapes but some people also believe that they lack efficacy, but there is no evidence to that conclusion and generics are widely used throughout the NHS. Some patients might find advil works better for them than motrin, or vice versa, but that would have to do with placebo effect,how digestible the tablet is, and sometimes, the dosages. Hope that helps.	These three medications are virtually identical in terms of their intended usage and effects. They all alleviate minor to moderate pain, fever and inflammation. They are suitable for the treatment of such conditions as headaches and migraines, menstrual cramps, dental pain, discomfort related to kidney stones and various forms of arthritis.They’re all classified as NSAIDS (Non-Steroidal Anti-Inflammatory Drugs and pharmacologically, these three drugs are equivalent. This is because Advil and Motrin are simply branded versions of Ibuprofen, which isthe active ingredient in both. As Ibuprofen is available as a generic medication,the major difference between the three is that Ibuprofen is cheaper. Ibuprofen is most commonly available in tablet form, costing between 1 and 4 cents pertablet. Advil and Motrin will cost closer to 10 cents but are easier to find in capsule and other forms. The composition of these drugs will only vary in terms of colorants, binding agents, filler content and the like. As for availability, Advil, Motrin and Ibuprofen are all dispensed over the counter, at least in their minimal dosage form. They’re considered relatively safe medications, suitable for use in both adults and juveniles, provided they’re used in accordance with the instruction sheet. Frequently-encountered adverse effects are mild and include rash and gastric reflux. As BethannSiviter pointed out, Advil is made by Pfizer and Motrin is made by McNeil. Another equivalent medication you may find available in some locations is known as Nurofen. Ibuprofen was first formulated in 1961 and, as the patent has lapsed,it may legally be manufactured by any licensed pharmaceutical firm,such as Safeway.	When it comes to the differences between these three drugs, the only real differences are cosmetic and price-related and, sometimes, differences in the method of delivery. All three are equivalent in their medical purpose and effects. They’re commonly prescribed by doctors or sold over-the-counter on the advice of pharmacists for the treatment of pain, fever and inflammation. These drugs may be used in pain conditions, such as headaches, toothaches, menstrual pains, etc. or used in fever conditions such as often accompany colds or flu or used in inflammation conditions, which include various forms of arthritis, such as rheumatoid.These drugs are known medically as Non-Steroidal Anti-Inflammatory Drugs, or NSAIDS for short. At the pharmacological level, they’re all the same because they’re all composed of the same base compound, that being Ibuprofen. Advil and Motrin are in fact simply brand name versions of Ibuprofen, which is itself available as a generic. So the most significant difference between the three, at least for most people, is that Ibuprofen is by far the cheapest.These three medications are virtually identical in terms of their intended usage and effects. They all alleviate minor to moderate pain, fever and inflammation. They are suitable for the treatment of such conditions as headaches and migraines, menstrual cramps, dental pain, discomfort related to kidney stones and various forms of arthritis.		
java	smalltalk	One of the differences is that Java is statically-typed while Smalltalk is dynamically-typed. This means that in Java, every variable and every expression in the language, has a type that is determined at compile time, and this static type determines what the compiler will let you do. In Smalltalk, there is no static type. Another difference that is related to the above is that in Java, a method call expression or field access expression is only allowed if that field or method is provided by the static type of the expression to the left. Even if you say, oh, I know that at runtime, the object pointed to by the value on the left side will always have this method, that is not enough. The actual compile-time type of the expression must be of a type that has it, or it won't let you compile. If the object may be one of several classes, then you must find a common supertype that provides the method. In Smalltalk, on the other hand, you can send *any* message to *any* object, without any compilation issues. The above also brings up another difference. Because you can send any message to any object in Smalltalk, that means you can send a message that an object did not implement. What happens then? It sends the doesNotUnderstand: message to the object. This usually causes an exception, but if the object implements this method, it can dynamically handle messages that it does not understand. This can be used to do things like make an object that handles *any* message. This is useful, for example, in making a "proxy" object that forwards the messages it receives to one or more other objects, dynamically. This kind of dynamic method handling is not directly possible in Java. One of the most noticeable things about Smalltalk is its small amount of syntax. Smalltalk manages to do everything in terms of message calls. For example, Smalltalk doesn't need a class declaration syntax, instance variable declaration syntax, method declaration syntax, etc; instead, it's done through message passing: a new class is defined by sending a message to the parent class, passing the variable and method declarations as part of the message. Similarly, there is no need for special control flow syntax (if/else, loops, exception handling) -- all of those are done using messages too. Java, on the other hand, is very verbose and has tons of syntax. Other differences include class objects and metaclasses. Instead of static methods in Java, you have class methods in Smalltalk. The class methods are methods of the class object itself. And class methods are inherited through normal class inheritance (and thus can be overridden); that means that you can call a method on a class object, and it will dynamically select the implementation to call at runtime depending on the value of the class object. This is implemented by class objects being instances of metaclasses (each class object has its own metaclass object), and the metaclasses are also inherited analogous to the classes. This is very different from static methods in Java because the method to call is determined completely at compile time. Smalltalk also has built-in support for anonymous functions (blocks), whereas Java is only including something similar in Java 8 (and even then, they are slightly different).	On the surface, you can see similarities between Smalltalk and Java. You can see classes, member variables, methods, and inheritance, but the truth is all of those features came from Simula, which predates Smalltalk by a few years, but which Smalltalk adopted in creating OOP. There is a big difference between Smalltalk and Java, and it all has to do with the architecture, the system concept. Smalltalk is designed like an operating system, not just a programming language. Objects are “live.” They’re like system processes that are active the whole time your computer is on, not just while you’re running applications. The metaphor Alan Kay used for objects is they’re really servers. Lately, he’s taken to calling his concept “server-oriented programming.” This is a terrible analogy, but if you think of a web server, that’s kind of how they’re supposed to be thought of. You send a message to one, and you get a response (though in his scheme, you get back an object reference. That’s not what happens with a web server). It implements a method of semantic operation (programming) between these “servers” called “message passing.” You communicate with objects the way servers on the internet communicate with each other, using protocols. He called them interfaces. These are the only types in the language. Method dispatch is late-bound like the way a server responds to requests for service. Since in Smalltalk, just about everything is an object, every object acts at once like a client and a server, requesting services from other objects, and providing services to others. Java does not have this concept about it. It does not treat class instances like servers. Methods are bound early. All classes and methods are bound up inside executable modules, not in a system environment, where they are accessible to and by everything else. When an application shuts down, all of its classes go away. It has a concept of interfaces, but IMO it has trouble with the concept of encapsulation, because instead of basing types on interfaces, it bases its type concept on type tags, like C++ does. So, it exposes implementation a lot even while it offers some means to hide it. I don’t call Java an object-oriented language, though that is how it is popularly known. It doesn’t model objects the way objects were defined. A more apt description for its model of classes is abstract data types. If you look at how ADTs are defined in terms of procedural languages, their means and methods map very well onto Java’s concept of classes. The only thing Java adds to that is an extra abstraction layer that it calls “interfaces,” which allows some polymorphism among ADTs that naked ADTs don’t offer. This programming model is an improvement on procedural programming.	Object Model. In Smalltalk every thing, is an object. Java has primitive types like int and float whose representation and behavior are different from complex objects. Behavior invocation. Behavior of a Smalltalk object is invoked by sending it a message. Java has methods, which are basically function calls, with the destination object being a special first argument called this. Encapsulation. Smalltalk has strict encapsulation. An object's fields can be exposed only through messages. In contrast, Java allows public fields. Dynamism. Smalltalk is extremely dynamic. All types are identified at runtime. A class can be introspected and modified at runtime (dynamic meta-programming!). New classes can be created and instantiated at runtime. Java has static type checking along with runtime polymorphism. There is introspection and reflection, but classes and objects cannot be modified from within a running program. Syntax. Smalltalk do not have a syntax. Instead it has a simple, consistent format for sending messages. Java, like other languages of the C family, has a complex syntax. Environment. Most Smalltalk implementations provide a complete, standalone, live computing environment with image based persistence. Some of these environments can even be booted on bare metal. The JVM in turn is usually dependent on an underlying operating system for threading, networking etc. Source code must be entered into text files, compiled and explicitly loaded into the JVM for execution.		
adidas	nike	In my opinion, Adidas. But that’s pretty biased I guess. I just like their shoes a lot more. They might be weird on sizing, but they know how to make extremely comfortable shoes. A lot of their shoes are like socks, and you don’t have to actually tie them. The Ultraboosts, NMDs, and Yeezy Boost 350 V2s are my favorites. Although right now I only own Yeezys and Vans, mynext purchases will be more Ultraboosts. Why? Because they give me everything I need. They are great for running, working out, walking around, and everything in between. Adidas just makes the most comfortable shoes I’ve ever worn. And they all look good too. I like the look of Nike’s Air Vapormax and their Roshes, but that’s about it. Other than that, most of their shoes just aren’t visually appealing. But that’s just me.So all in all? Adidas all the way. They win every category for me.	Nike or Adidas? Depends what you're looking for in shoes specifically. Nike has a lot of classic shoes like the Air Force 1's and the Roshe Runs. Adidas has some awesome technology like the Pure Boost shoes. Many skaters prefer Adidas over Nike. Collectors seem to prefer Nike over Adidas. Look at these ratings for both brands to see what a bunch of other customers think.Service wise, I've had good experiences with both companies. When it comes down to it, I honestly like them both equally. For me, it really depends on the individual shoe. Both Nike and Adidas has crappy shoes as well as awesome shoes. Why? Because we all have different preferences and tastes and because of that, it's really hard to say which company is the best. Just based on sales and awesome commercials, Nike wins. They also make Jordan shoes so that's another huge point. If you base it on who has the most comfortable shoe, I think Adidas wins with their Pure Boost shoes.So is it style you're after? Comfort? Cost? Quality? All of that makes a difference.Now if you are just talking about brand, then I think Nike easily wins since they're more recognizable.	It is no secret that both of these boots are currently the top sellers on the market and for good reason. Nike and adidas have both put tremendous time and effort into making their Speed boots the premier choice of top players. Cristiano Ronaldo, Lionel Messi, Gareth Bale, Luis Suarez, Zlatan Ibrahimovich, Mesut Ozil, Robin van Persie and Edson Cavani are just a selection of players who wear one of these boots. The list goes on!The primary component that differentiates both boots is the material used in the upper. adidas keep things a little more simplified with a synthetic upper that features a very light texture. Nike, on the other hand, uses a Teijen microfiber that has a dimpled effect, designed to offer a much different feel on the ball.In terms of actual weight, the F50 comes it at a slightly lighter 5.8oz compared to 6.6oz for the Vapor. But at this low weight point, there really isn't a ton of difference performance wise. Everything leads back to personal performance preference, between the upper and the traction system employed. When it comes to the soleplate, Nike has developed and employed a unique system that is only used on the Vapor, adidas on the other hand use the same SprintFrame that is used on most of their current range - it is seen as a more "tried and tested" solution.		
mysql	sqlite	SQLite is a public domain, open-source project. It is what is called an “embedded” database which means the DB engine runs as part of your app. MySQL is also open-source but is owned by Oracle. MySQL is a database server so you have to install it somewhere and then connect to it from your app. They serve two totally different purposes. SQLite is often used for an app to maintain its own data. For example, a web browser might use SQLite to store its bookmarks. An email client might use SQLite to store email messages locally. A database server such as MySQL is used to store data that is typically accessed by multiple users and apps.	The big difference is SQLite is a app-resident library, while MySQL is typically used as a client-server DBMS where the client process interacts with the DB server process using some sort of networking.  (Note that MySQL does have an app-resident usage mode, but it has a much bigger footprint than SQLite.) SQLite (and Berkeley DB, which is architecturally similar although it's a sort of "NoSQL db) are highly useful for standalone apps and apps on small devices.	SQLite is also a RDBMS but a lightweight one, it doesn't require it's own process, clustering or user management unlike MySQL or others RDBMS. MySql is a relational database management systems (RDBMS), which hold databases that are based on relations.		
baseball	hockey	Hockey tends to have a much higher incidence of multiple stimuli that need immediate attention at one time. For example, an hockey player skating up the ice with the puck must have sensory awareness of opposition players attempting to separate him from the puck. He must also stay aware of teammates being in a potentially beneficial position. That's all after the player has taken his body's mechanics into account (the very act of skating, and puck handling, and the nearly limitless combination of these two factors such as outside in toe drags, between the legs- backhand pass, cut hard across the middle and drop the pass). This is just one piece of the constantly moving puzzle of what a hockey player manages within milliseconds (sometimes)!Baseball players tend to be able to concentrate on much more simple mechanics and stimuli at one time. A hitter has only to focus on the ball leaving the pitcher's hand. I dont mean to simplify it. I appreciate the hand eye coordination necessary to be a successful hitter! But, compared to that of an hockey player, it's rather simple. Just as baseball players must focus on running 90′ and avoid being tagged, hockey players must skate in any number of directions with an indeterminate amount of distance.Hockey simply has more moving parts that players need to stay aware of.	In one way baseball is much more challenging. You have to wait around a long time doing basically nothing, then only have a very brief chance to do something that matters. So it is both boring and nervous-making. Remember the perverse fascination with stats in baseball, especially errors.Depending on which position you play, it is even worse. Outfielders stand around until the risk of an error happens.Ice hockey involves far more intricate skills to learn. And requires a far more constant overall body coordination, reflexes, level of physical conditioning, risk of career ending injury, and to my mind FUN.	Hockey players do things in their sport that football baseball and basketball players do in theirs. Let us compare:Baseball:  Hitting a one time is vaguely similar to hitting a fastball, though it is done with much greater accuracy (but the "pitch" (pass) is slower).  Hockey players have to have quick reaction time.  They are also very skilled with a piece of wood, and the goalies with the leather. A lot of baseball is the mental game, figuring what pitch is coming next, what pitch to throw next or three batters down the line, how to position yourself based on the batter and the situation.  i don't know if hockey has this level of Chess like quality, but that is not generally considered an athletic quality.  (however part of the reason the Great One was the Great One was because he know where the puck was going to be before anyone else did)So Hockey is very similar to all these other sports.  But for me the thing that puts hockey player over the top is they do all of this ON ICE!  Most of us won't  even walk to the mailbox if it's icy.  These guys are going full bore for 60 minutes on the stuff.		
groovy	java	If you use Gradle build system (instead of, or additionally to Maven), than Groovy will probably be the language in which you plugin the build system when you need something custom done. As one gentlemen commented, it seems that Gradle is moving from Groovy to Kotlin, might be interesting to note. Java lacks a REPL (but one will be introduced), and “scripting in Java” is close to an oxymoron, and that is where quite a few languages which run on the JVM come in, Groovy being one of them. Plus it has great Java interoperability. Since Java 8 introduced lambda expressions and a degree of functional programming is possible, Groovy is however less interesting. The Groovy author is quoted that if he knew about Scala, he would not have started a new language. That would not have been good for our history and diversity, good that he did not know about it:). Thirdly, I know about an actual project using Groovy for dynamic typing programming, although I would not probably use a dynamically typed language as the main language in any system that will run in production. From the statically typed languages on the JVM that do have the conciseness flavor of scripting, there is Scala but also Frege, a Haskell port on the JVM (not the only one).	If you need to write some quick script, and your choice is between Groovy and Java, Groovy is better, as it is less verbose and you can run the script without having to (re)compile it after any change.	Groovy is used for fast development and in a 100% Java compatible language. It is also used when needing a language that one can template in but can statically compile. One can dynamically develop in Groovy and then statically compile the code when ready for production make it extremely flexible and productive as a language.		
javascript	php	Since Javascript started out as a client-side language but has morphed into a server side language it has built in limitations that are necessary on the client-side, but cause a hindrance on the server-side. So it’s kind of a “jack of all trades, master of none” situation (although it’s still the master of the browser). For example, javascript must be singled threaded. This means typically a whole webserver cannot utilize all of a server’s cores, only 1. Technically PHP has this limitation too, but PHP has some buddies (Apache, nginx, etc) that handle the multithreadedness for it. On the surface this might seem like a small deal, but dramatically affects the way you have to write code. Javascript has had to invent Promises and Async/Await to address this issue. PHP developers have never even thought about this and have been programming basically the same way for decades. As a result, it’s much easier to debug php code than javascript. Every developer I’ve had to train picks up PHP faster than Javascript. I really like the idea of server-side Javascript, but I’ve seen some feature requests for Javascript that have been denied because implementing it could make it easier for inexperienced programmers to do something less than optimal on the client-side. It’s a shame that optimizing the client side has to prevent the server-side stuff from progressing.	both are different JavaScript is not programming language it is just scripting which is used for making your website dynamic, for example if you wana show any message box in button click event or you wana display data in grid basis of your data in database dynamically all these things handle by javascript . PHP is backend programing or you can say a server side scripting you can use it for make your page dynamic but normally it is used for CRUD operations for the database and all the backend logics are build on this.	In comparison to PHP and typical JavaScript executed in browser; you can do almost all the things in JS which don’t need server to work. PHP code is executed on server which means it’s possible to use some internal functions not available in web browser (and there are many reasonable explanations for that, most important one is security). In case you think about server-side JavaScript (Node.js) that’s whole different topic and I don’t think there are many things which PHP can do and JavaScript cannot. If there are such ones they exist because: They’re incorporated in PHP while they’re not yet available in Node. They’re already available in some library / framework so they don’t have to be incorporated in language. There’s no strong enough reason to add them.		
soda	tea	In my opinion if i were to choose between the green tea or diet fizzy drink, I'd stick to the green tea with sugar compared to drinking artificial diet fizzy drinks.This is because green tea has many benefits and is also a natural substance. It contains antioxidants and can also have digestive and weight loss benefits. (I do not reccomend adding sugar as it will cancel out the benefits of the green tea)However I would stay away from all things with added sugar, or things that are refined and processed , as they can cause serious health issues, like cancer and diabetes (to name a couple)As you mentioned, McDonalds has an option for water. Which would be the best option to choose from. It is pure and clean. It is free from additives and is necessary for good health! Your body is over 2/3 water, so choosing water would be a no brainer.Lets not think what has more value, rather think ‘what is the best thing to consume and put in my body’You wouldnt feed a plant an acidic diet drink would you? Well what makes you, a living organism, any different?Hope that helps!	For the sake of your health choose green tea.Just because diet drinks don’t have sugar it doesn’t mean they’re healthy, they’re disasters to your health because the artificial sweeteners are extremely toxic (they wreck your brain and heart) and the containers they’re kept in expose the substance to a lot of metal and plastic contamination.Hell, if you care about your health don’t eat at fast food restaurants to begin with.	Green tea is better than diet soda! Even diet soda contains more sweetener per unit of volume than green tea does. Though, I think it’s better to drink a moderate amount, maybe 500 mL max, of sweetened green tea and drink water to fill any additional need for liquids. In any case, reducing sugar intake is key if you want to lose weight.		
ethernet	usb	You could safely say Ethernet is faster than USB since that's true most of the time. Ethernet links have reached speeds of 100Gbps and are marching towards 400G and higher add technology improves. Ethernet also supports aggregating multiple links into a bundle to give arbitrarily high bandwidths. USB seems to have a max of ~5Gbps, nowhere close to Ethernet. However, if you compare 10BaseT Ethernet with USB 2.0, in that specific comparison, USB would come out faster for raw bits per second. Even then, I doubt useful data throughput would beat Ethernet as the networking stacks are much more tightly integrated with Ethernet than with USB. Comparing the two is like asking who is faster, Ussain Bolt running or a high schooler on a bike. The real answer is, it depends on the length of the race. On distance metric, USB loses pretty badly to Ethernet as some fiber optical cables carrying Ethernet are rated for 40 km or more.	Its definitely Ethernet. However both USB and ethernet are used to connect to the internet but when it comes to speed ethernet outruns the USB connection. USB transfers the data at a rate of 480 Mbps. Whereas Ethernet transfers date at different rates, it ranges from 10 Mbps to 40 Gbps.	Ethernet is used to interface networking computers to one another and the Internet whereas USB is used to connect devices to a computer. Ethernet comes in a variety of speeds: Fast Ethernet (100 Mbps), Gigabit Ethernet (1000 Mbps), 2.5G, 5G, 10G, 25G, 40G, 100G and 400G. The rate of data transfer in USB 2.0 is 480 Mbps. Apart from Fast Ethernet, every Ethernet speed is faster at transferring data than USB.		
cement	wood	There’s several reasons houses in the U.S. tend to be wood-framed:Wood is inexpensive; the United States has a lot of it. Not only forests that can be logged, but tree farms where lumber-grade species (“southern yellow pine”) are grown and harvested like other crops. Concrete, as cheap as it is, is still far more expensive than wood in the U.S. - and masonry brick is even more so.Wood is easy to work with. It’s more forgiving than concrete or masonry, it’s easier to and faster to put up a wood-framed wall, and that all means a more affordable house.Wood is flexible. Masonry and concrete doesn’t do well in seismic areas, such as the West Coast of the U.S. And while a strong earthquake is certainly able to damage a wood-framed house, they don’t typically collapse altogether like more rigid materials do.It’s a standard in the construction industry. This means that banks are comfortable loaning on wood-framed houses, and insurance underwriters are used to writing insurance policies on wood-framed houses. Not that they don’t for other construction methods as well, but it’s easier for them to deal with wood-framed houses.	I don't see any of the answers mention two of the real reasons wood isn't used in India and can be used in the US, namely:-a)Climate - Most of the US is temperate and gete extremely cold during winter. For the same, at least for personal homes, it's far better to have a wooden home which is insulating rather than concrete which conducts heat far better. On the flip side, India is very hot and it's better to have concrete to dissipate the heat faster. In general, concrete homes stay cooler.b) Also related to the climate, fungi and termite/weevil infestation in wood is a huge problem with wood in India. Because most of India is very humid and hot through a large part of the year. For the same, usually most wooden furniture in India is made from teak wood which is naturally termite resistant. I'm pretty sure, if an average American home were built in my hometown, it would become unsafe within a year due to termites/weevils.	Firstly, there are many buildings with concrete(not cement, cement is a base material) and brickwork in US and many made of wood in india. On an average you're question maybe valid.Mostly it depends on availability of material, climate, technology, and skill set.When new Americans came from Europe they brought with them technology of wooden construction and skill required for such construction, as wooden houses are quite popular in europe.The availability of vast forests, made timber a vital material for construction.The climatic conditions were somewhat similar on an average, longer winters, snow and storms, in north America as was in europe.Alongside, in India the base material used now a days is brick and RCC for the same reason: availability, climate, technology and skill set. We used to use stone, timber and chuna for construction. The shift to bricks and RCC came with independence when modern architecture and thinking was adopted for making large infrastructure like dams, cities like Chandigarh, goverment housing or houses like Sodhan villa in Ahemdabad.		
basketball	football	Soccer is more challenging than basketball because using your feet is much more complicated and difficult than using your hands. Soccer is requires you to be more fit because on average, basketball players have to run 2.72 miles and soccer players have to run on average of 7 miles per game. It takes a very long time to master the different layers, such as offsides, set pieces, and offensive and defensive formations. Other complexities come with a higher level of expertise at a higher level (I assume, seeing that I am good at watching soccer, not playing it professionally.). Basketball has, at its most basic level, one objective. As a soccer player, it takes countless hours to develop a good touch. But soccer is that one sport that makes you affectionate and passionate, that even a single score means alot to you. Even if soccer is a bit less well-established than most of today’s modern basketball games.	This is a question of opinion, like which color is better, red or blue.Some people are going to like basketball more because it’s cheap to play (you only need a ball and a playground or gym), and easier to play with less injuries. Some people are going to like football more because it’s more physical and vastly more difficult, requires more strategy, more talent, skill at different positions, etc.I prefer football for the reasons mentioned above. Basketball was created out of boredom, when the weather was too crappy outside to play football. It’s not a bad game (now that the rules have evolved), but even the people I know that love basketball seem to prefer to watch NFL football over NBA basketball.Between the two, I’d much rather watch the two worst teams in the NFL play, than the two best teams in the NBA. It’s that big a difference to me!	As someone who plays both competitively, I believe basketball is better, but here are the pros and cons of each sport from my perspective and how I play it:Speed of PlaySoccer is very relaxed compared to basketball. You’re playing for 90 minute and usually only score a couple times. You could have a good game by just making good thru balls. I personally find soccer speed of play easier and am more conditioned for it. Basketball, however, is always looking to score and you are always sprinting for the whole game. Possessions are very quick, no more than 45 seconds in high school, and even passing is a lot faster, you have to think faster in basketball.DefenseI am a very good defender in both sports but soccer is by far easier. For me I am stronger than most of my opponents in soccer and I am able to stick my shoulder right into them and push them off the ball. You cannot do that in basketball or else youll fould and instead have to use your feet and have to have quick hands.Dependency on athleticismAgain this is my personal view, but having a natural born gift is more advantageous for basketball. The ideal basketball player needs to be tall which will already give them a trememdous advantage. Soccer doesn’t need any body type. As long as you are in shape you should be fine. A short player like Messi and a kind of tall strong player like Ronaldo are both very successful.CoachingBasketball is a lot different than soccer in how you play with tactics because there are many ways you can play. Slow, fast, trap defense, press, half court defense, zone, etc. Sure soccer might need different formations but the general style of play is largely the same. Also basketball has a lot more set plays and offenses. Soccer only has those on corner kicks and throw ins.PracticingFor me, I’ve spent a lot less hours on soccer than basketball, but am still really good at soccer and only average at basketball. This is because of shooting and finishing- it is such a tough skill and it is more like practicing the piano or studying, if you don’t shoot everyday you will lose muscle memory, whereas for soccer I can come off a month of playing basketball without touching a soccer ball and still dribble really well and pass.OverallSoccer comes more naturally to me and for some it’s the opposite. Sometimes soccer can be really fun when played right but basketball is more challenging intense and fun all the time. I feel playing basketball benefits me a lot as a soccer player, but not as much vice versa. However, if you look at Steve Nash, an NBA player, his amazing court vision came from soccer. I recommend you try both sports and see what’s best for you!		
cadillac	lexus	Cadillac: Subsidiary of General Motors, “your rich grandfather’s car.” Lexus: Luxury Toyota, reliable and a bit more stylish.	Cadillac - Limousines. And the CTS-V. That’s about it. Lexus - Solid, practical, and comfortable luxury cars with good reliability thanks to their Toyota engineering; Decent value for the money; made the LFA, possibly the greatest sounding production car of all time.	Lexus: Luxurious, EXTREMELY reliable (as in even more so than Toyota), beautiful refined interiors, but underpowered and don't handle as well as some competitors. Makes up for it in practicality and comfort however.		
baseball	basketball	In a Gallup poll earlier this year, 37% of respondents stated that football was their favorite sport to watch, followed by basketball (11%), baseball (9%), and soccer (7%).This marks the first time in over a decade that basketball has eclipsed baseball in popularity.Moreover, the age of the average fan for each sport portends well for basketball. The average football fan is 50 years old; the average baseball fan is 57 years old, and the average basketball fan is 42 years old.The popularity of sports on social media is another predictor of future success. The NBA has an average following of over 29 million on Facebook, Twitter and Instagram, compared to 17 million for the NFL and just 2.3 million for MLB.It’s easy to see why baseball’s popularity has been waning for many years. At a time when Americans are increasingly demanding action-packed sports entertainment, baseball — already a slower-paced, pastoral game — has allowed its average game time to swell to three hours and five minutes, thirty-five minutes longer than the average game in 1979. And a majority of that extra time is spent on in-game inaction — time outs called after each play and tedious lollygagging by pitchers and hitters between every pitch.	It totally depends on the country you are in. In countries that have the infrastructure and people with passion for basketball, it obviously will be more well known.I would say basketball is more famous than baseball, solely based on the fact that I have heard, played and seen a lot more of basketball that baseball. Baseball is not as famous as basketball outside USA. One of the major factor of this is the size of the fields. Basketball only required 2 hoops and 495.6377184 sq. m of area whereas a baseball field has to be 12140.60 sq. m. So, it is way easier to finance and build or make area for a basketball court than a baseball field. Basketball is also an indoor sport whereas baseball is not, therefore, in countries with cold winters, basketball is generally preferred over baseball. But again, this depends on the country you are in.			
php	ruby	If you need rapid development, then i would suggest not to use PHP. Handling PHP code gets difficult as your project grows and specially if more than one person is coding it. Just read pros and cons of each and choose wisely which serves your needs better. (Just read your comment above, i have written the reply below) If you are just targeting web development i would suggest learning Ruby,	Ruby is perfect for web development.Thanks to its Ruby on Rails framework, this programming language is incredible for: startups MVPs prototypes web dev in general PHP PHP is great for rapid development: great for fast development available and entirely free - PHP is an open source technology			
apple	google	Google.  Here's why: Cloud services are increasingly important.  We put more and more things in the cloud.  Phones and tablets and other devices are simply becoming portals to the services that we use everyday.  The king of those services is Google, and Apple is far behind. Another reason Google will "win", is because of Android.  Lots of new connected devices run Android.  It's easy to port to smaller devices.  Android runs on Google Glass, and surely any other wearable device that Google comes out with. Lastly, and I think the most important reason, can be related to what Microsoft did to Apple.  Microsoft allowed their OS to be installed on any hardware.  It created a hardware ecosystem that Apple could not compete with.  Same is happening with Android.  Sure, iPhone is probably the best hardware out there, but because of competition among Android device makers, iPhone will soon be another phone in the market for which there will be 10 other great, high end phones just like it. Apple will have fun making profits for a while but they will slowly diminish as Android + Google services takes over everything	Apple would easily win. Why? Because war is more about logistics than anything else. Apple has that down. They also have contracts with hundreds of suppliers and contractors. They'd be able to build weapons and supply their troops. They also have a lot more money. Apple is staggeringly bigger than Google. Apple's revenue, profit, and cash are greater than Google, Microsoft, Facebook, and Yahoo!'s combined. In a direct conflict, Apple wins. Keep in mind a few other things. Google depends on Apple for a large amount of their profit. They make far more from iPhones than they do from Android. The last time Apple and Google fought, it was over Google Maps on the iPhone. Apple made their own version and Google lost billions. They won't make that mistake again.			
minivan	suv	Well, an SUV is a vehicle that sits up high and can perform various jobs that are done by a truck. A can usually has a longer wheel base and a lower ground clearance. Most mini vans are FWD, while some now get awd likes most SUVs. Mini vans usually have sliding doors. The target market for a van is a family with kids, while an SUV is for people who wanted to sit up high or needed certain aspects of a truck without a bed.	SUV stands for ‘Sports Utility Vehicle’ while a minivan (MPV or MUV) ‘Multipurpose Vehicle or ‘Multi-Utility-Vehicle’SUV vehicle is designed for adventure rides which has extra added features to put up with the kind of hurdles the car might face during the journey. Minivan is a smaller sized vehicle compared to an SUV which is designed for easy passenger or Cargo access with sliding wide opening rear doors.Below each are an example of SUV and Minivan for you to get a better understanding of the difference between the two:SUV Vehicle:Hexa from Tata MotorsTata Hexa is one of the leading SUVs in India with lot of attractive features like dual coloured bumper with chrome humanity line, Striking Daytime Running Lights, Smoked Projector Headlamps, Wraparound tail lamps, sporty interiors with excellent finishing, Ambient mood lighting and thoughtfully designed utility spaces for all three seating rows. To know more about Tata Hexa interiors & Tata Hexa design, refer this linkMinivan:Omni from Maruti SuzukiMaruti Omni is a microvan manufactured by Maruti Suzuki, it has two categories: the family version and the cargo version. Features like 2 speed windshieled wiper, Multi-function levers, High mounted rear stop lamp, Two - tone upholstery, Glove compartment with lock, Front & rear assist grips & High mounted rear stop lamp. 			
harvard	princeton	As far as prestige and quality, it’s splitting hairs. You’ll never get a concise or accurate answer from anybody over which is the best because there really isn’t a “best,” and the U.S. news rankings rotate between the three every few years. However, they are slightly different places. I’m a Yale student, and I have good friends at Harvard and Princeton – here’s how I’d characterize the differences and overall vibe/feel of each place in extremely general terms (based on my perception): Harvard is the school of innovation. People here are focused on changing the world through the formulation and realization of ideas. Regardless of the discipline, they focus on academic research and discovery that affects the big picture and addresses global problems.; Yale is the school of leadership. Probably the most socially vibrant of the three, people here are really focused on other people. Extracurricular activities have a huge presence, and are seen as important as classes sometimes. It often feels like academic programs prioritize breadth over depth, and are designed to prepare a student for a career involving delegation and broad understanding rather than deep exploration.; Princeton is the school of intellectual genius. It’s a very self-contained campus, and the lack of professional schools plus the strength of humanities and natural science departments indicates a focus on knowledge and understanding in its purest form.	It really depends on what you’re looking for…Prestige? Harvard Yale Princeton A fun/happy undergrad experience? Yale Harvard Princeton A strong, focused education? Princeton Harvard Yale Access to top grad schools? Harvard Yale Princeton All three are fantastic schools, and which one is “best” really depends on the person. Are you artsy, fun, and chill? Then Yale might be the place for you. Are you involved, achievement-oriented, and ambitious? Then Harvard might best fit you. Are you looking for strong academics and a personal college experience? Then you might want to check out Princeton.  Stereotypes aside, you will find people who have all of these traits at all of these school. You really can’t go wrong with choices like these.			
php	python	PHP is used on 80% of all web servers, and there are three main reasons for it. First of all, PHP is simply older. It was built and released earlier than most other web server development technologies. Second, it powers Wordpress, the biggest blogging platform in the world. It's also the engine behind Drupal and Joomla, and so it powers all the websites built on these 3 systems. Finally, PHP is installed on every web hosting server. These are the main reasons why PHP is stable and mature. It's also being continuously improved, because of the huge number of people who use it. Additionally, PHP has some nice frameworks that will make development easier, for instance Laravel, or Codeigniter. That being said, PHP is not the best option for any project. It works great if you'd like to build a blog, or for other projects that don’t require a lot of calculations or bleeding-edge features. If you'd like to build an innovative web application, you should probably go with something else, like Python. Additionally, the development of PHP is a little messy. Different versions are developed by different teams, which may cause problems. Finally, even though like I already mentioned PHP remains very popular, it's popularity is no longer rising. If we take a look at the TIOBE index, PHP is no. 9 on the list (as of October 2019), while a year ago it was at no. 7. Python is a general-purpose scripting language with a scientific background. It's often used for writing scripts for data scraping and computations, managing complex big data models, as well as new technologies. Artificial intelligence, machine learning, and the Internet of Things can all be tackled with the use of Python. The language is also being taught at many universities all over the world. That's because of its readability and simplicity. There are many Python frameworks you should consider using. The most popular ones are Django and Flask, but others are worth checking out, as well. On top of that, Python offers many scientific libraries, which make the process of development easier and more enjoyable. For instance, you could use SunPy to analyze solar and heliospheric data, or PsychoPy to generate experiments for neuroscience and experimental psychology. Python's popularity has been rising steadily over the last couple of years. The TIOBE index places it at no. 3 today (it was 4 last year) and also predicts it may become the most popular programming language in the world in 2-3 years. It's being used by companies such as Netflix, Spotify, and Instagram, among many others. Similarly to PHP, Python is a mature and popular programming language with a big community of developers. The difference is, Python is more versatile and it's better structured.	Here's the thing. PHP is a language created specifically for generating dynamic web pages. It continues to grow, including borrowing good ideas from other languages like Java, Python, and Javascript, but it's still a single-purpose language and runtime. Python and Ruby (and now increasingly Javascript, largely thanks to Node.js), are powerful general purpose languages that don't feel out of place when used for non-web purposes like asynchronous processing tasks (e.g. sending out scheduled email alerts) or server tooling (e.g. deploy scripts).			
metal	plywood	Plywood can make an excellent core for furniture, like beds and tables because of its strength and durability. However, there are a few things that are to be kept in consideration. The plywood you would want to use for beds needs to be Marine Grade plywood and with higher Glue Line Protection. The plywood needs to be reinforced with more number of layers for improved strength and SSR.Getting into the features, needless to say, the plywood should be 100% termite and borer proof and swell proof. The core of your bed needs to be bend proof as well and should be able to withstand impacts and mechanical load.CenturyPly is the leading manufacturer of superior grade plywood and our range of ClubPrime plywood is BWP, 100% termite and Borer proof and comes with 20 years of warranty. This will be a great return on your investment.	The market for plywood was mainly driven by increasing demand from housing market. The demand has increased owing to growing significance of plywood in the buildings & construction industry and its advantages over conventional metal, wood, and plastic.For More Information, Download PDF BrochureIn addition, plywood is also used in marine applications for building decks. Structural panel market is likely to be the major opportunity for the plywood market. The major restraint for the market would be higher cost of plywood as compared to OSB (Oriented Starboard) which offers similar features to that of plywood. .In terms of demand, North America was the leading region for plywood market. The demand has been substantial from housing market. North America was followed by Europe, where the demand is huge from housing and construction market. The demand for plywood is mainly from the U.K. and Germany. Asia Pacific is expected to be the fastest growing market for plywood.			
apple	sony	I purchase apple I give it to my family, quality & standard are more in sony, if u hold both Sony & apple together any device of same category suppose mobile phones, or u using Sony & sum1 else using apple, watching same content dan definitely both eyes & ears will be on Sony. Da sound & visual effects u get from Sony is like 10years ahead of apple. U use Sony & apple ear in phone or head phones, u will find Sony better day or knight. I been using since 8yrs phones & various gadgets along wid apple from past same time. East or west sony is da best & beast.	Sony makes better movies, TVs, and cameras then Apple (given that Apple makes none of those things). Apple makes (in my opinion) better watches, laptops, and computers. (NOTE: the last Sony computer I owned in 1999 or so was nice, but it ran Windows, so it could only be “so nice”…I’m to sure how nice their modern laptops are though).			
lumber	timber	The word lumber is not used outside North America.  Timber is timber, the US refers to timber a s lumber.  In the US this is how it is summarised.1.Timber is dominantly considered as the wood that is still attached to the ground whereas lumber is no longer standing on the ground.2.Timber is widely accepted as the wood with its bark still on whereas lumber no longer has the wooden bark.3.Timber is the word used to refer to wooden boards in the U.K. and Australia while lumber is the wooden board for the American and Canadian denomination.4.According to North America, lumber is the finished wood product often made commercially available especially in construction whereas timber still has to be cut and processed for it to be sold for construction purposes.5.Timber is an older term compared to lumber, which was coined more recently only by nNorth America.	Trees all differ from each other, the quality of wood that is Harvest from trees depends on the need and the production quantities and the main end uses for wood products. Therefore there is different names for different applications of wood products namely Timber and Lumber. Where timber is more for construction purposes in general and lumber is any wood in any stage of development of use, this means any wood of any kind and quality, It is like the difference between a. house and a home, Lumber means the love for wood, And a home is a place where love is.			
basketball	tennis	I'd recommend tennis.Unlike Basketball, while playing tennis the amount of rest you get during the game is far less. You are sprinting around the court constantly whereas in basketball you get more rest and sprint less.Another reason why tennis is better is because it is full body workout as opposed to basketball where you are jogging and jumping bit. Tennis invloves more muscle groups than basketball does, which means that you burn more calories while playing tennis.	The basic formula for losing weight is simple -- burn more calories than you take in. To lose weight by playing sports, therefore, find a sport you enjoy -- to help you stay motivated in the long run -- and one that keeps you moving, so you’ll burn calories. Fortunately, there are plenty of individual and team sports that can help you shed those pounds.Yoga Teacher Training in India,Yoga Teacher Training in RishikeshBasketballBasketball is a solid choice if you’re looking for a team sport to help you lose weight. While you’re on the court you’ll be in fairly continuous motion, whether you’re on offense or defense. And if you play on a full court you’ll be jogging up and down a 94-foot-long floor. If you play a half-court pickup game you won’t run as far, but the game won’t have as many pauses for free throws if you play with a typical street ball “no-harm-no-foul” philosophy. On average, a 160-pound individual will burn about 584 calories playing basketball for one hour, according to the Mayo Clinic. You lose 1 pound when you burn 3,500 more calories than you consume.TennisIf you prefer individual sports, playing singles tennis is about the equivalent of playing basketball or football. Tennis can be played at different tempos, so you’ll burn more calories if you and your opponent hit the ball fairly hard but still keep it in play, a combination that will keep you moving. Playing doubles tennis won’t burn as many calories because you don’t cover as much ground, and you only hit half as many serves.			
lisp	python	Python is one of the most widely used programming languages in the AI field of Artificial Intelligence thanks to its simplicity. It can seamlessly be used with the data structures and other frequently used AI algorithms. The choice of Python for AI projects also stems from the fact that there are plenty of useful libraries that can be used in AI. For example, Numpy offers scientific computation capability, Scypy for advanced computing and Pybrain for machine learning in Python. You will also have no problems learning Python for AI as there are tons of resources available online.	Lisp fares well in the AI field because of its excellent prototyping capabilities and its support for symbolic expressions. It's a powerful programming language and is used in major AI projects, such as Macsyma, DART, and CYC. The Lisp language is mostly used in the Machine Learning/ ILP sub-field because of its usability and symbolic structure. Peter Norvig, the famous computer scientist who works extensively in the AI field, and also the writer of the famous AI book, “Artificial Intelligence: A modern approach,” explains why Lisp is one of the top programming languages for AI development			
perl	python	I consider Perl to be more of a sysadmin's Swiss Army Knife, so to speak. It's great at text manipulation, automation tasks, and passing messages between systems such as email and networking. It's definitely a general purpose language, but due to its unusual syntax and history it tends towards those certain uses. Python is more of a general purpose language. While it can be used as a scripting language, it has many other uses. It has history in data science, but also has lots of other histories, particularly in web development. It's also really easy to pick up and read, which makes it an extremely human-friendly language.	Perl doesn’t remove old features. The author believes that what was done wrong may be necessary for someone if they used it. Unlike Python fascistic belief that if the authors think they are right, the world must follow, so they remove old features at will on every version change without caring others.			
motorola	nokia	The old Nokia mobile manufacturer is no more, it was sold to Microsoft. Then Microsoft closed it down. But brand name Nokia is still owned by the Nokia Co(which has other divisions that focus on Network-Telecom Infrastructure & Patents) who have given it to another company called HMD to use to make feature phones & smartphones. This is the current Nokia we know, however, the new Nokia has embraced Android wholeheartedly and have been producing good Android smartphones priced at a slight premium from Xiaomi phones. Their main advantage is the great build quality, good design, pure Android performance and faster updates. Their camera performance is average most of the time. Now coming to Motorola, they were one of the pioneers in mobile phone technology and were one of the first in the history of the world to make commercial mobile phones. However they couldn't compete will in the Android smartphone market and hence the current Motorola is not really Motorola either, it's was originally bought by Google, then sold to Lenovo So Motorola which was famous for almost pure Android like performance, fast updates etc have lost those qualities under Lenovo. And their smartphones currently are overpriced (compared to Mi, Asus) average performers under all important sections even , performance, design and slow at updates. They have a model Moto X4 which is waterproof, that seems to be only advantage they have over Nokia or Xiaomi or Asus smartphone	Nokia mobile phone are one of the strongest mobile phone in the world as you know that, you need strongest in a affordable price then you should go for Nokia on the other hand Motorola was also one of the famous company it's give some different and new types of specifications on her phone. So you need some more and Different as your need then you may go for Motorola. It's a company in which you get a good features phone in a budget price.			
amazon	microsoft	Here are some strategic differences between the two companies. Microsoft has fewer opportunities in its core market than Amazon. While productivity software - and some hardware - is a large and growing market, it is smaller than retail. Both have great opportunities in Cloud Services. The two companies have vastly different core expertise, and I would expect Microsoft to have better AI capabilities, but Amazon to have a richer array of use cases for AI application. Microsoft has greater experience selling to large enterprises than Amazon does. Microsoft’s regulatory problems are behind it. Amazon’s may be ahead of it. Even though Amazon has a track record of driving lower prices with high customer satisfaction, there are some objections to its being in the private-label goods business and competing with others using its platform. Both companies are well run, and very relevant, today and at least for the next decade.	Well MS is a software company that has ventured into other areas on being hardware with the Surface brand. Amazon doesn't have it's own brand of computer like MS. They do have smart speakers with the Alexa brand. One thing that both of the have been expanding in is cloud services (amazon web service versus MS Azure). Amazon isn't really in the corporate software business like MS. MS has SQL and Windows server products.			
juice	soda	I like juice and soda. Soda made from cane sugar and naturally fermented is pretty amazing. Root beer is awesome.Orange pineapple strawberry juice is pretty cool, too.Both are sugar filled and incredibly unhealthy for you though. They also both are linked to diabetes and weight gain.	The juice is always healthier than soda. Soda is just carbonated water which does not have any health benefits rather have side effects. On the other hand fresh juice is power-packed with nutrients which at least is the value addition.			
ds	psp	Sony made numerous poor decisions with the Playstation Portable that negatively impacted its early sales.The system used the clumsy UMD media format, which is essentially a minature CD in a plastic case. This made the system and its games feel pretty fragile, and made them endure much longer load times than the Flash-based DS game card.It was priced $100 more at launch and came out the year after the DS, giving Nintendo’s handheld a head start.It didn’t launch with a killer app and it never really got one—at least not a true system seller—in the west. It had some fantastic games, like the musical puzzle game Lumines, but early on it had nothing that gave it massive appeal. The DS similarly didn’t have a *game* like this early on, but the system itself offered new (at the time) features that drew interest, namely the second screen with touch input.Sony’s marketing, especially in Europe, was terrible from the mid 00s to the early 10s, and alienated a lot of people. Meanwhile Nintendo specifically marketed the DS to non-traditional markets with games like Brain Age, Cooking Mama, and Nintendogs, increasing its appeal.In terms of power, the PSP was a significant cut above PS1 but still less much less than PS2. It also launched in the same year as the Xbox 360. To compound that issue, it only had a single control stick and only two shoulder buttons. In terms of power, and marketing, Sony seemed to be indicating they wanted experiences similar to the PS2 console on the go and their own titles like the God of War games emphasized that. However the visual and control limitations made controlling such games on the PSP much more difficult. It couldn’t do what Sony apparently wanted it too.The PSP Go revision removed the UMD drive entirely and made the system entirely digital. While this wouldn’t cause as much consternation these days, back then downloadable games weren’t as ubiquitous, and it also made the PSP Go an unattractive upgrade for fans of the original unit with UMD collections. Per contrast, the DS’s first revision, the DS Lite, kept all the features of the original system, improved many that weren’t as well-liked, and is universally considered an upgrade.There was one major thing that changed the PSP’s fortunes… in Japan: Monster Hunter. Monster Hunter became a huge phenomenon and the PSP actually succeeded quite well in its home country due to massive Monster Hunter gatherings—it was a game that the DS just couldn’t handle. Unfortunately Monster Hunter never really gained big traction in the West until this year’s Monster Hunter World.In the West, the PSP largely became a niche machine most notable because it was fairly easy to hack and install homebrew software and emulators on. Many people who had PSPs actually used them to play classic SNES and Genesis games on the go, but consequently weren’t buying legit PSP games. Because the games weren’t selling, support for the system dried up. And without games, the PSP continued to have little appeal.…this list turned out way longer than I thought.	Well basically because the Nintendo DS was a better console overall. It had 2 screens that that opened up for a lot of new types of games. One of the screens was a touch screen that opened up for a lot of new cool games. So functionality wise it could do a lot more. This also allowed for more or less every game on the PSP to be ported over to the Nintendo DS but most of the unique games on the Nintendo DS just couldn’t work on the PSP because it hadn’t the necessary tech.The other reason was that it just had so much better games. The PSP had a couple of good ones but the Nintendo DS basically had some of the best games ever created.And yeah you had a ton of Nintendo exclusives on the system also which really bost sales even more.			
windows vista	windows xp	1 - Appearance in Vista is very beautiful and easy to use either in the appearance of the system is very normal XP, but you can change it. 2 - Windows Vista system when installed on the device, it reserves more than 40 gigabytes of hard disk space (internal scanner for the computer) The system xp only 6 GB of hard disk space. 3 - The system Windows Vista slow and heavy on the processor because it consumes the area of ​​RAM because of the beautiful appearance of the system windows XP is very light and fast because it focuses on the operation of programs. Vista system with network problems Sometimes you find that the connection is limited or offline and the simplest way is to restart the system again (restarting the device) The system xp is fast in networking and you can configure the network between the device and another device without problems And in less time. 5 - Some programs do not compatible with Vista Vista but works but problems occur, but in the windows XP system, all programs work without problems.	Vista is not better than XP. I have been in the computer support industry for over 30 years and if you look at the history of Microsoft Operating systems your will see a trend. The release a poor version of the operating system and then fixing it and releasing it as a new version. Windows 3.0 released. Fixed and released as Windows 3.1 Windows 95 released. Fixed and released as Windows 98. NT Server released. Fixed and released as Windows 2000. Windows ME released. Fixed and released as Windows XP. Windows Server 2003 released. Fixed and released as Windows Server 2003R2 Windows Vista released. Fixed and released as Windows 7. Windows 8 released. Fixed and released as Windows 10.			
dell	ibm	Dell Inc maintained its number 2 position in the worldwide server market with 20.1% of vendor revenue for the quarter and 4.7% year-over-year growth to $2.4 billion. Cisco, IBM, and Lenovo were statistical tied* for the third market position. Cisco had 7.0% share, with revenue declining 3.0% year over year to $825 million. IBM had 6.3% share, with revenue declining 34.7% to $745 million.  Dell Inc and HPE were statistically tied* for first place in overall unit share, with 21.0% and 20.8% of worldwide server shipments, respectively.				
floating-point	integer	Float fractions only to the right of the decimal point , string always a alphanumeric data type, integer, whole number.				
cnn	fox	I would assume that CNN reports more carefully chosen facts because they are still trying to convince people that they practice journalism. The facts they present will only be ones that fit their narrative.Anyone who thinks either CNN or Fox are good sources of information live in a bubble with lots of echo.Fox openly admits to being entertainment, not journalism. CNN is still trying to convince people they possess some credibility, they don't.Either one will present only the facts that fit their narrative or just make some up. Then they will spend lots of time telling you how to interpret this information. Loads of opinion and prognostication.I love the “fact checking” nonsense as well. There has been numerous occasions where one “fact checked” the other about a prediction of outcome. LOL, “fact checking” a prediction. I'm quite certain none of their crystal balls work better than any other.Not one pundit from any media outlet has any better record of predicting any outcomes than any common person off the street.My suggestion is to keep an eye on all of the above and others. Form your own opinions based only on things that have actually happened and see if a pattern forms. Ignore all rhetoric, opinion and prognostication. You cannot get all of the relevant facts on any issue from one source!It is disturbing how far the spin game has progressed and the irreparable damage it has done to what were some of the finest institutions in journalism. Journalism is dead, entertainment sells better. This media thing is only about making money folks, a profitable corporate endeavor.				
javascript	perl	Is JavaScript faster than Perl? For some tasks, yes. For others, Perl is faster. In the linked benchmark shootout, Node.js beat Perl (often by a wide margin) in 8 out of 10 benchmarks. Perl vs Node js - Which programs are fastest? However, this ignores a vital difference between the languages. Perl has a method (the Inline module) that allows us to include C functions right inside our Perl script. You can write node.js extensions in c++ but these are external modules that have to be compiled seperately. With Inline C in perl you can mix C and Perl source code in the same file; compilation is automatic and transparent.				
apple tv	ios	I'd like to see what others will say apart from what I mention here: 1. Connecting with iSight Camera for iChat/FaceTime. 2. Direct plugin port for satellite/cable for TV broadcast. 3. A definitely-required touchscreen remote-control device.				
asus	gigabyte	What goes for any of those brands is that their products are all well documented, coming with the product but also on the web.With ASUS I had some annoying problems in attaining the right driver for a specific card, their servers with information are all over the place, but their server holding the drivers was just in Asia, so every link on every server led back there.And that server apparently was swamped with requests, I could not get through.Downloading a file of just 200KB took hours and hours.Is that still the case ?I don’t know, that one time was enough for me to not want Asus anymore.They have good products though, back then and now. Just the support I am not sure about.Gigabyte went as far to create a custom bios for me in order to allow me to install an OCZ Revodrive in 2012 on a Gigabyte GA-990FXA-UD5 motherboard.How’s that for service………MSI has a well working service site, well documented products.I can’t say I have any experience with the quality of their service as in the 5 years that I have MSI, I didn’t have any problems with the hardware.The specific GPU’s from each of those brands have their own overclocked cards in several grades, one faster then the other at a cost.One uses a different cooler then the other, different colors, RGB or not, material differences (metal, plastic, carbon) at a cost.I tend to choose the same brand for the GPU as is my motherboard.Motherboard in 2014 : MSI Z97 Gaming 5GPU in 2016 : MSI GeForce GTX 1070 GAMING X 8GA future motherboard will again be an MSI board with carbon materials.				
carolina	michigan	Michigan and Michigan State probably play better football but my choice is North Carolina. It’s one of the top 10 states people are moving IN to. Michigan, to be charitable, isn’t on the list. It ranks last on the list of laws on fairness and transparency in government and it is dominated by unions. The state’s largest union, the United Auto Workers, just went on strike against General Motors almost concurrently with the UAW President Gary Jones being named as a co-conspirator in a corruption investigation and having his home raided by the FBI.Michigan has a 15.2 percent unionization of all workers while North Carolina is 4.0 percent.Want more? Showbiz Cheat Sheet, which pulls no punches, said this about No. 2 ranked Michigan on their list of most corrupt states : “Michigan ranked worst (50th) in accountability for all three branches of government. It’s a genuine cesspool, brought to you proudly by Governor Rick Snyder.” In Snyder’s defense, well, he has a Democratic legislature. So both sides are at fault.Thus I leave it to you. Do you wish to live in a heavily unionized state with high levels of corruption; or in North Carolina.				
laptop	phone	Battery of phones last around 5 hours or straight of using, cheap phone batteries cost around 2–3 or if the non-cheap phone is running so many apps. Battery savers on phones makes the phone run like 5 hours +Laptops battery functions differently because they have bigger parts and a bigger screen to run power on and they last around 2–6 hours of usage depending on how you are using them if you’re opening apps that consumes battery or if you have battery saver on etc.Gaming laptops have stronger batteries that last 8 hours straight depending on the power usage of apps or games on laptopPC uses around $10–25 usd electricity per week depending on how much power does the GPU, CPU or motherboard of your PC is using up. Also your screen.				
missouri	virginia	Missouri: Everyone says "the arch" because that's all anyone can remember about Missouri. However, the Plaza in Kansas City is really something to see. It's one of the first outdoor shopping areas in the country, modeled after Seville, Spain, with many beautiful fountains, sculptures and architectural features. Virginia:Blue Ridge Parkway http://en.wikipedia.org/wiki/Blu...Another road as "one place", but this parkway is a stretching reach of vistas and little towns that is maintained by the National Park Service. Delightful day (or two) on the eastern edge of the Appalachians.				
dartmouth	harvard	If cost is a concern and Dartmouth is significantly cheaper than HYP then go to Dartmouth. If you don’t care about prestige, good weather, renowned professors and ambitious peers, then consider Dartmouth. Dartmouth is more differentiable from Harvard than from Yale and Princeton. Dartmouth is more focused on undergrads than Harvard if that matters to you.				
cuda	opencl	I have to agree with Eren Golge. OpenCL while conceptually more powerful and flexible (any GPU, heterogeneity, etc) is just harder (IMHO)  to learn and write fast code in. CUDA already has half a dozen good books, a larger community, lots of samples and examples, the NSight framework for debugging and analysis... It's just easier to get started with (unless you went and bought and ATI GPU in which case you're out of options). I also think that CUDA has more job prospects				
direct3d	opengl	OpenGL was a little bit slower than Direct3D around me in 1997~2000. Most game developers in Korea was needed to write best performing code for slow computers, so Direct3D was the best choice. At first glance, Direct3D was more complex than OpenGL, but Direct3D allowed app developers to directly access 3D resources (mesh and texture buffer). Another reason is that there were many Direct3D resources for graphics techniques. Microsoft, Nvidia and ATI has released many beautiful techniques and samples. AFAIK, finely refined API for newer technologies such as programmable graphics pipeline aka. shader programming has been introduced earlier by Direct3D than OpenGL. Game programmers has been always hungry for new and cool technologies, thus the choice was clear.				
google	intel	Paul Buchheit is interviewed in a chapter of "Founders at Work: Stories of Startups' Early Days", http://amzn.to/93eUFo  Founders at Work is a great book if you are interested in startups stories.The reasons Paul Buchheit gave for taking a paycut to join Google was that working at Google seemed more fun than working at Intel.  I remember him mentioning that Google seemed pretty doomed at the time he joined.  His manager at Intel told him "You can have a startup within Intel." but he left for Google because it would not have been the same.				
potato	steak	Well, well, well . . . this is a bit of an unfair competition, don't you think?When they share a plate, whereas the steak is the main course and the mashed potato is there as the side dish, I'd say steak is better. No contest here. In that specific occassion, I want to consume a medium-rare delicacy, with just a bit of sweet-sour-y bits of softly-baked potato. Steak is obviously much, much far better than potato.But, when I'm at home, just back from my long commute from office, and I'm hungry-but-not-that-hungry, I'd grab my favorite potato chips from the table, throw myself into the bed, open my laptop and browse the net, and munch some chips using my favorite chopsticks. On this occassion, potato chips is the best way to go.So, there you go. Steak and potato are two, different kinds of soldiers, fighting different kinds of war. Two different bullets, serving different purposes. Two different professions, performing different jobs.Two different superheroes, battling different kinds of situations.				
hulu	youtube	It all depends on what you want from a live TV service.YouTube TV seems to have a better overall sports package, but Hulu TV also comes with a “free” subscription to the traditional Hulu service.You can easily compare lineups of both services, and even get free trials for both so you can have some hands-on time before committing to one service or another.Better still, neither service requires you to sign a contract. You can try out one or the other for a few months to see if it really works for you. If not, swap over to another to run with for awhile.				
leica	nikon	The Leica, and this is true of all mirrorless cameras, benefits from mechanical simplicity, hence lighter weight, and bringing the lens closer to the focal plane of the shutter, impossible with a mirror in the road of it, permits simpler lens design, especially physically smaller lenses, for the same f stop, in turn permitting Leica to attain extraordinarily high manufacturing standards. A physically small lens permits higher sophistication and higher manufacturing standards. Leica lenses have always been their strength. Nikon, on the other hand, makes cameras that are of excellent quality, and a lot cheaper, although not of the absolute quality of Leica. Leica, though, does hold its value much better. Nikon lenses are excellent, and at long and very short focal lengths, far more versatile. Do they have the eyeball cutting sharpness of (some) Leica lenses, or the bokeh? Nearly. Are they more use for wildlife and sports photography? You bet! Which is why you see wildlife and sports photographers cheerfully humping around heavy gear with lenses like howitzers. Wedding photographers like the machine gun like speed of Nikon’s (and Canon’s, for which all these comments are generally true) which permits them to discard dozens of pictures that were not right. I know one who uses Canon, and borrows my Leica with a 28mm lens for its unobtrusiveness, and quietness. His comment is that he throws away half of the SLR’s voluminous output, retaining what is really good, and he uses nearly all of the Leica output, because of the thought that went into the image before he pressed the button. Bottom line, in skilled hands, while they produce different work, both produce excellent work. Another consideration is extreme environments. I have lived and worked from the Arctic to the equator, from the middle of the ocean, to the centre of the Australian desert. For reliability, lack of dependence on batteries, mechanical simplicity, and superb, rugged manufacture, I would take neither a modern Leica, or Nikon. I would carry a clockwork M3 Leica, and film. This is still the worlds best ever rig, if reliability in conditions deadly to electronics is a major consideration.				
michigan	virginia	It is now with 58,110 sq miles(excluding water area)of land to Virginia's 42,774 sq miles!But orginally Virginia was bigger with 66,852 sq miles, once the biggest state east of the Mississippi,but in 1861 unionist in Northwestern part of Virginia voted to break away and 2 years later on June 20,1863 the state of West Virginia was admitted to the Union,leaving Virginia 24,078 sq miles smaller!This old USA map above shows Virginia in its original size, oh yeah Michigan didn't even exist then, I guess they don't call Virginia “Old Dominion” for nothing!				
iphone	laptop	I phone is better than laptops in every department because mobile phone is a wireless device and with this, we can talk with anyone at any time in the world with phone and we can’t do this with laptop that’s why phone is better than laptop and I phone x announced with the i phone 8 and I phone 8 plus by apple on September 2017 with the hexacore system on chip, An improved system and graphics performance, Wireless charging, upgraded camera. The I phone x got a 5.8-inch screen nearly the size of small tablets but in some task email and web browsing Enough. and we know that the storage of the mobile phone won’t match the laptop but you can store files in dropbox and google drive too. But issues are inevitable and can drop us at any time. To keep your device always working so you need experts for this. Our technicians will give you the best and good I phone x repair in Dubai. we give you 24x7 customer support. In the following issue, we can help you. screen replacement and repair, data recovery, water damage repair, overheating issue, I phone charging port repair. You can feel free to contact and visit us at any time.				
buick	cadillac	Buick is for the elderly. It's comfortable and seems to have enough for the older driver. Cadillac is for the 30-45 somewhat wealthy American who loves comfort and "style". Also it seems the african american community has an infatuation with the brand.				
hewlett-packard	ibm	IBM invests way more in innovation, patent development and "blue sky" thinking. A good recent example of this is the Watson supercomputer. HP has been sidetracked with the EDS acquisition and merging of two very different cultures whereas IBM acquisitions are very quickly blue-rinsed and staff assimilated into IBM's culture. IBM management in countries outside of the US also have a lot more autonomy than at HP where the MD is largely a figurehead.				
hewlett-packard	intel	Intel is a chip maker. They make a variety of integrated circuits (chips) but are famous for the processor chip that are in most PCs. IBM is a company focused on Cloud and Cognitive computing. They sell exclusively to business and do not sell to the consumer market. They used to be a chip maker but sold that business to Global Foundaries several years ago.				
bmw	honda	My constraints in buying a Honda or BMW are: -Price -Maintenance Expenses -Gas Mileage If you don’t have a limited budget but don’t want to invest a lot, choose Honda - they are one of the most dependable car brands on the market today. With more spec, and some useful extra tech, the BMW is a key player at the entry point of the luxury car market.				
haskell	java	The two languages present entirely different ways of programming (OOP vs FP). Java’s ecosystem is much larger and richer. Java is much more versatile. So it rather depends on the type of application you’re writing. Haskell compiles to native code, while Java runs on a byte-code virtual machine. If raw execution speed is important to you, then the answer is yes.				
msi	nvidia	Nvidia is a GPU chip designer, while MSI is a graphics card manufacturer. MSI also makes other products like motherboards, laptops, PCs and peripherals. Nvidia only makes the founder’s edition or ‘reference’ model of a GPU. Then, companies like MSI and Zotac take that GPU chip, add their own heatsink, fans, and maybe even make the chip itself a little different, and then sell it. These are called aftermarket cards.				
honda	nissan	Honda’a -Known for being extremely reliable aside from some transmission issues that I believe have been corrected for some time now Nissan’s - Known to be reliable and that’s pretty well as much as you can say positive and truthful being they’ve had so many issues with they’re 2.5 engines and the transmissions they put in several of they’re trucks & SUVs that had a problem getting coolant into the fluid.				
nokia	siemens	There was a progression.There was Nokia to start with (I worked for them).I got a loaf of bread and a new mobile, a nokia.Nokia did a joint venture with Siemens (a strong and reliable company, which was an able partner for the then troubled Nokia). For employees, the JV was very positive. I got another loaf of bread and another new mobile.In time though the global scene became very competitive.NSN though held its own but to stay viable, was brought back by Nokia and became Nokia Solutions Networks. They saved money by maintaining the NSN brand and just changed the acronym.After a while NSN became Nokia again, the business having gone through a a full cycle, but much stronger as a result of the all the changes.I left NSN (Nokia Siemens Networks) in 2012.				
javascript	python	Python has a lot going for it, including the fact that it is almost ubiquitous, has innumerable libraries and massive communities and these are all things that Javascript also has. I think much of the hate toward Javascript (reflected in another answer here) stems from the fact that Javascript, if you look at its history, was cobbled together very quickly to meet an immediate need. Much has changed, over the years though, due to standardization of ECMAscript. Javascript has some quirks, but I am sure so does Python. However, the thing that has always put me off Python is the way indents is used to structure code (delimit groups of statements and blocks). While it obviously does not bother millions of programmers, it bothers me. The thing about using indents to form blocks is that it is intended to make the code easy to read by humans, which it does well. However, a computer can really mangle your code because it does not know whether your intent was, e.g. to include a whole block inside an if statement or not. So you cannot leave the formatting or analyzing of Python code to a program because it can genuinely mess things up. Javascript, granted, has more tedious syntax, but by forcing the programmer to use curly braces around blocks, there is no question about what code belongs to a block. But Javascript has another thing going for it, which is the way the runtime manages execution of code in an asynchronous manner. The asynchronous abilities of Javascript lead to some hair-raising code, but it has allowed people to write some of the most responsive server applications. (Python has some libraries too to deal with asynchronous execution of code without blocking, but it is not a core part of the language, at least the last time I checked).				
java	lisp	Java is also a great choice. It is an object-oriented programming language that focuses on providing all the high-level features needed to work on AI projects, it's portable, and it offers in-built garbage collection. The Java community is also a plus point as there will be someone to help you with your queries and problems. Java is also a good choice as it offers an easy way to code algorithms, and AI is full of algorithms, be they search algorithms, natural language processing algorithms or neural networks. Not to mention that Java also allows for scalability, which is a must-have feature for AI projects. Lisp fares well in the AI field because of its excellent prototyping capabilities and its support for symbolic expressions. It's a powerful programming language and is used in major AI projects, such as Macsyma, DART, and CYC. The Lisp language is mostly used in the Machine Learning/ ILP sub-field because of its usability and symbolic structure. Peter Norvig, the famous computer scientist who works extensively in the AI field, and also the writer of the famous AI book, “Artificial Intelligence: A modern approach,” explains why Lisp is one of the top programming languages for AI development.				
ford	nissan	My opinion is both are poor quality and Ford may be better, Nissan transmissions fail early and so do expensive poorly designed Catalytic converter manifolds, buy a Kia or Hyundai first, they give 100k mile warranties for a reason…. They can afford to, 100k warranty on Ford Nissan or Chrysler would Bankrupt them in less than 5 years				
ds	ps2	I would say go with the PS2 version of Dragon Quest V. I bought it for the DS and my copy basically blacks out and becomes unresponsive during a mandatory floor transition about halfway through the game.				
nissan	renault	Since 1999 Nissan and Renault have a working alliance. Nissan owns shares of Renault and Renault owns shares of Nissan (see below for exact details). The purpose of the alliance is to share research and development costs and use the results to build better and cheaper cars. Daimler is also taking part in this alliance with a smaller share. You can find some small diesel engines in Renault, Nissan and Mercedes Benz cars, for example.				
ibm	microsoft	IBM is a joke. It used to be a pioneer in many things long back but not now. The company is losing profits and getting on the path to bankruptcy. None of its products are doing well. They are only surviving because of the service industry. Microsoft on the other hand is an amazing company worth working for. They have such diverse products and portfolio that there is no scope of it going down. They have cloud, os, applications in all segments, what not. They will continue to rise as an amazing product company. Please don't compare Microsoft with IBM.. You can compare Microsoft with Google or Amazon.				
chrysler	toyota	Toyota has been on the top of the reliability lists for many years, Chrysler products typically occupy the lower regions of the same lists.				
oracle	postgresql	The up sides: You get an amazing software ecosystem and a lot of choices as to how you support and use it. It’s completely immune to over-deployment, so you can use it in ways that Oracle basically disallows. If you want to ship one for each node where something is deployed, you don’t need to get in touch with someone about the cost because it’s zero. Its bundled with most operating systems and easy to install on all the other common ones. You get truly excellent support both from the community and from consultancies to suit your need. Bugs are frequently fixed within 24 hours of the first report.мThe down side is that there’s not a gigantic and untouchable entity to blame if something ever goes wrong. This is actually an important difference to a certain type of manager.				
beer	champagne	Hi, the difference between all the alcoholic beverages is due to the raw material used and the process involved in making it. It is a vary vast topic and all the details cannot be given here but in a layman language following are the definations:Beer : Main ingredient is malt (Barley, wheat etc). Beer making process is known as brewing and the most common process involves fermentation of malted Barley.Champagne : It is a type of sparkling wine which comes from the Champagne district of France it involves secondary fermentation of wine to create Carbonation.				
bmw	ford	There is no true benefit of having expensive cars because at the end of the day it’s just a car. And cars are utilized for travelling from one place to another People usually but BMW’S OR FORD cars just to show that they are not poor and they have money Even though you want to buy a BMW because its your dream car. And you really love a BMW. You can buy, but buy it for your satisfaction but not for the purpose of show.				
itunes	youtube	Youtube accepts most videos with most sound qualities. Music distributors require a minimum .wav usually and people can download them in multiple sound formats, so you cannot really give a general answer.				
ibm	intel	Intel is a chip maker. They make a variety of integrated circuits (chips) but are famous for the processor chip that are in most PCs. IBM is a company focused on Cloud and Cognitive computing. They sell exclusively to business and do not sell to the consumer market. They used to be a chip maker but sold that business to Global Foundaries several years ago.				
ferrari	renault	Renault are the best of the rest, but they've not had a good season so far. Their engine works 'better' for their works team, but it's down on power when you compare them with a Ferrari or Mercedes. So much so that the Honda had better results sometimes. They're still bringing in updates which should hopefully improve their performance. Their engine as such is 'reliable' but not fast				
java	ruby	If you don’t have any preference, I’d say Java. There are a lot more jobs. However, you should learn the language you are more passionate about. If you want to work at a Ruby shop, learn Ruby. If you want to work at a Java shop, learn Java. One benefit of learning Java over Ruby is that Java opens up more doors for you. There are multiple JVM languages and many companies choose another JVM language over Java. I used to be a Java developer, but I’m now a Scala, which is a JVM language, developer. If you have a decent understanding of Java and JVM, it’s easier to learn another JVM language. Actually, Java is inevitable if you are writing in one of the JVM languages. You need to know Java at least a little bit. Speaking of JVM languages, check out JRuby				
chrysler	ford					
georgia	oregon					
carolina	pennsylvania					
bluetooth	usb					
audi	lexus					
concrete	metal					
stone	timber					
motorcycle	truck					
carolina	georgia					
bmw	ferrari					
lumber	plywood					
concrete	plastic					
bread	soup					
michigan	pennsylvania					
beer	milk					
ds	ps3					
football	tennis					
golf	hockey					
metal	stone					
michigan	missouri					
rubber	wood					
gamecube	wii					
georgia	virginia					
cafe	restaurant					
harvard	stanford					
basketball	softball					
california	carolina					
microsoft	sony					
baseball	tennis					
pizza	sausage					
pizza	sandwich					
dell	microsoft					
oregon	virginia					
ps2	psp					
carolina	missouri					
pizza	steak					
beer	juice					
mysql	postgresql					
gamecube	ps2					
sandwich	steak					
bread	pasta					
mobile	wallet					
pennsylvania	virginia					
concrete	steel					
chocolate	soda					
chalk	paint					
golf	tennis					
pizza	soup					
bus	truck					
sandwich	sausage					
cement	concrete					
milk	tea					
georgia	michigan					
ipod	laptop					
pistol	rifle					
apple	intel					
california	missouri					
bluetooth	ethernet					
dell	intel					
avaya	huawei					
dell	sony					
birthday	holiday					
coffee	juice					
concrete	wood					
ps3	psp					
chevrolet	toyota					
iphone	ipod					
aluminum	steel					
laptop	mobile					
ford	toyota					
google	sony					
amazon	apple					
playstation	wii					
java	objective-c					
halloween	thanksgiving					
bread	pizza					
ps2	ps3					
amazon	facebook					
windows 8	windows xp					
california	michigan					
bread	potato					
amazon	youtube					
google	kingston					
espn	fox					
nissan	toyota					
cement	plastic					
forest	timber					
amazon	sony					
apple	dell					
foam	rubber					
hockey	lacrosse					
beer	coffee					
basketball	hockey					
nokia	samsung					
skiing	swimming					
perl	php					
google	ibm					
amazon	hulu					
birthday	wedding					
amazon	google					
intel	microsoft					
plastic	wood					
google	itunes					
kennedy	reagan					
ford	honda					
cider	juice					
cement	rubber					
cardboard	plastic					
baseball	softball					
california	georgia					
steel	timber					
haskell	python					
kennedy	nixon					
football	golf					
juice	tea					
knife	pistol					
camping	fishing					
hockey	tennis					
awk	perl					
cardboard	wood					
ds	wii					
intel	kingston					
plywood	steel					
baseball	golf					
concrete	stone					
bread	sausage					
amazon	itunes					
motorola	samsung					
google	microsoft					
facebook	youtube					
gamecube	playstation					
concrete	rubber					
sandwich	soup					
california	pennsylvania					
basketball	volleyball					
steel	stone					
holiday	wedding					
football	lacrosse					
beer	tea					
psp	wii					
bmw	toyota					
suv	truck					
google	youtube					
georgia	missouri					
audi	mercedes-benz					
intel	sony					
samsung	toshiba					
football	volleyball					
foam	wood					
paint	pen					
concrete	timber					
milk	soda					
football	hockey					
california	oregon					
javascript	ruby					
amd	samsung					
baseball	football					
juice	milk					
chevrolet	ford					
nixon	reagan					
ipod	phone					
pasta	soup					
michigan	oregon					
perl	ruby					
chocolate	tea					
tennis	volleyball					
ps2	wii					
beer	soda					
aluminum	metal					
bread	steak					
fishing	swimming					
jeep	suv					
basketball	golf					
advil	ibuprofen					